#
# Imakefile for cli
#

#include "../Imakefile.def"

#if defined(SunArchitecture) && (OSMajorVersion == 4)
CLI_SYS_OBJ = syssun.o
#else
CLI_SYS_OBJ = sysunix.o
#endif

#if defined(CliUseReadline)
# use GNU readline 
READLINE_OBJ = clrdln.o
#else
# do not use GNU readline
READLINE_OBJ = clrdln-dummy.o
#endif

#if defined(HasIFORT)
FILEIO_OBJ = ifort_fileio.o
#elif defined(HasGfortran)
FILEIO_OBJ = gfortran_fileio.o
#elif defined(HasG95)
FILEIO_OBJ = g95_fileio.o
#elif defined(HasG77)
FILEIO_OBJ = g77_fileio.o
#elif defined(HasF90)
FILEIO_OBJ = f90_fileio.o
#else
FILEIO_OBJ = f90_fileio.o
#endif

OBJS =	version.o chard.o \
clopen.o iopen.o qopen.o opnrd.o printf.o \
clflag.o clalir.o clgetl.o clproc.o clhcmd.o clmacr.o clicmd.o clargs.o \
clatof.o cleval.o clword.o cllab.o cllog.o clifelse.o clpath.o clsubr.o \
clecho.o clsleep.o clgetlun.o clstatus.o cliset.o \
keyrd.o lenrd.o logrd.o numrd.o txtrd.o \
$(OBJS_UNIX) $(FILEIO_OBJ) cli_cwrapper.o clhelp.o

OBJS_UNIX = \
intrdl.o clsignal.o miscunix.o \
$(CLI_SYS_OBJ) unixc.o $(READLINE_OBJ)

INCLUDES = -I../include

NormalLibraryTarget(CLI,$(OBJS))

InstallLibrary(CLI,$(INSTALL_LIB_PATH))

DependTarget()

clhelp.c: ../doc/cli-userguide.doc
	echo "extern int strlen();" >$@
	echo "extern void clecho_();" >>$@
	echo "void clhelp_() { int i; static char *m[] = {" >>$@
	sed -e 's/^/"/' -e 's/$$/",/' ../doc/cli-userguide.doc | \
	sed 's/\\/\\\\/' >>$@
	echo "0}; for (i=0; m[i]; i++) {clecho_(m[i],strlen(m[i]));} }" >>$@

clhelp.o: clhelp.c

clean::
	$(RM) clhelp.c

#ifdef SunArchitecture
clsignal.o: clsignal.c
	$(CC) -c -o $@ $*.c
#endif
