#!/usr/bin/perl
#
#  ut_hxdbstjudge2 - tests HETE2 method for hxdbstjudge
#

use strict;
use ut_xrtobj;

# main
{

    # Object Istances
    my $ut = ut_xrtobj->new(
                             name    => "hxdbstjudge",
                             utname  => "ut_hxdbstjudge2",
                             version => "1.0",
    );

    # Set Parameter
    #$ut->setParam("validate", 0);
    my $input   = $ut->getParam( "input_dir" );
    my $output  = $ut->getParam( "output_dir" ) . "/" . $ut->getParam( "utname" );
    $ut->setParam( "output_dir", $output );
    my $chat    = $ut->getParam( "chatter" );
    my $clobber = $ut->getParam( "clobber" );

    # I/O Directory Check
    $ut->checkIODirectory( ) if $ut->isValid;

    # Environment check
    my @chk_env = ( "LHEASOFT", "HEADAS", "CALDB" );

    $ut->checkEnvironment( @chk_env ) if $ut->isValid;

    my $ArchDir = $ut->getParam( "utname" );

    # Input Files Check
    my @chk_inp = (
                    "$input/$ArchDir/testin_ae404069030hxd_0_wam.lc.gz"
    );

    $ut->checkExist( "Input", @chk_inp ) if $ut->isValid;

    # Prototype Check
    my @chk_proto = (
                      "$input/$ArchDir/testchk_ae404069030hxd_0_wam.det.gz"
    );

    $ut->checkExist( "Prototype", @chk_proto ) if $ut->isValid;

    # Executables Files Check
    my @chk_exe = ( "hxdbstjudge", "ftdiff", "fverify" );
    $ut->checkExecutable( @chk_exe ) if $ut->isValid;

    # expected output files
    my @outfiles = (
                     "$output/testout_ae404069030hxd_0_wam.det",
                   );
    unlink @outfiles;

    # run the test
    my %par_task = (
                     input_name      => $chk_inp[ 0 ],
                     outfile         => $outfiles[ 0 ],
                     bgd_integ_time  => 8,
                     delta_t         => 1,
                     sigma           => 5.5,
                     bgd_early_gap   => 0,
                     bgd_late_gap    => 0,
                     det_alg         => 'HETE2',
                     use_trigger_set => 'yes',
                     trigger_set     => 'MEDIUM',
                     step_window     => 240,
                     step_delchi     => 2.71,
                     outtype         => 0,
                     gaptol          => 2.0,
                     overlaptol      => 10.0,
                     maxdur          => 200.0,
                     durest          => 'yes',
                     leapfile        => 'CALDB',
                     num_event       => -1,
                     event_freq      => 10000,
                     anl_verbose     => -1,
                     anl_profile     => 'yes',
                     chatter         => 2,
                     clobber         => 'yes'
    );

    print "task start\n";
    $ut->runTask( %par_task ) if $ut->isValid;
    if ( $ut->isValid ) {

        # fverify
        foreach my $outfile ( @outfiles ) {
            $ut->fverify( "$outfile" );
        }

        # ftdiff
        for ( my $i = 0; $i < @outfiles; $i++ ) {
            $ut->ftdiff( "$outfiles[ $i ]", "$chk_proto[ $i ]" );
        }
    }

    $ut->delete( );
}
