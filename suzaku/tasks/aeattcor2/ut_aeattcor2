#!/usr/bin/perl
#
#  ut_aeattcor2
#

use strict;
use ut_xrtobj;

# main
{

    # Object Istances
    my $ut = ut_xrtobj->new(
                             name    => "aeattcor2",
                             utname  => "ut_aeattcor2",
                             version => "1.0",
    );

    # Set Parameter
    #$ut->setParam("validate", 0);
    my $input   = $ut->getParam( "input_dir" );
    my $output  = $ut->getParam( "output_dir" ) . "/" . $ut->getParam( "utname" );
    $ut->setParam( "output_dir", $output );
    my $chat    = $ut->getParam( "chatter" );
    my $clobber = $ut->getParam( "clobber" );

    # I/O Directory Check
    $ut->checkIODirectory( ) if $ut->isValid;

    # Environment check
    my @chk_env = ( "LHEASOFT", "HEADAS", "CALDB" );

    $ut->checkEnvironment( @chk_env ) if $ut->isValid;

    my $ArchDir = $ut->getParam( "utname" );

    # Input Files Check
    my @chk_inp = (
                    "$input/$ArchDir/testin_ae402072010xi0_0_3x3b104a_cl.evt.gz",
                    "$input/$ArchDir/testin_ae402072010.att.gz",
                    "$input/$ArchDir/testin_ae402072010.reg"
    );

    $ut->checkExist( "Input", @chk_inp ) if $ut->isValid;

    # Prototype Check
    my @chk_proto = (
                      "$input/$ArchDir/testchk_ae402072010.att.gz",
    );

    $ut->checkExist( "Prototype", @chk_proto ) if $ut->isValid;

    # Executables Files Check
    my @chk_exe = ( "aeattcor2", "ftdiff", "fverify" );
    $ut->checkExecutable( @chk_exe ) if $ut->isValid;

    # expected output files
    my @outfiles = (
                     "$output/testout_ae402072010.att",
                   );
    unlink @outfiles;

    # run the test
    my %par_task = (
                     attitude        => $chk_inp[ 1 ],
                     outfile         => $outfiles[ 0 ],
                     eventfile       => $chk_inp[ 0 ],
                     regionfile      => $chk_inp[ 2 ],
                     integ_time      => 128.0,
                     minfrexp        => 0.99,
                     gtifile         => 'NONE',
                     clipmean        => 'no',
                     clipsigma       => 3.0,
                     clipiter        => 5,
                     cleanup         => 'yes',
                     clobber         => 'yes',
                     chatter         => $chat,
    );

    print "task start\n";
    $ut->runTask( %par_task ) if $ut->isValid;
    if ( $ut->isValid ) {

        # fverify
        foreach my $outfile ( @outfiles ) {
            $ut->fverify( "$outfile" );
        }

        # ftdiff
        for ( my $i = 0; $i < @outfiles; $i++ ) {
            $ut->ftdiff( "$outfiles[ $i ]", "$chk_proto[ $i ]" );
        }
    }

    $ut->delete( );
}
