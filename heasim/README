--------------------------------------------------------------------------------
Version: 
Date: 2015-01-28
--------------------------------------------------------------------------------

This file README 
contains four sections:

01_README_INTRODUCTION
02_README_CONTENTS         - list of files and sub-packages contained in HEASim package
03_README_INSTALL          - installation instructions for HEASim package
04_README_VERSION_HISTORY  - record of code changes before CVS logging picks up


01_README_INTRODUCTION ---------------------------------------------------

HEASim is a generic telscope/detector event simulator. 
To date, simulations are made by convolving model 
spectral and spatial distributions with detector response files, vignet file 
data, and PSF images. Ray-tracing code to be added.


Help and Support
--------------------------------------------------------------------------------
Please send email to:

      david.a.riethmiller@nasa.gov

for HEASim help and support.


Supported Platforms
--------------------------------------------------------------------------------
This version of HEASim has been tested on the following
platforms with the following compilers:

1. 64-bit Scientific Linux 6.5, gcc 4.4.7, gfortran 4.4.7

2. 32-bit Intel Mac OSX 10.8, gcc 4.2.1, gfortran 4.7.2


Dependencies
------------------------------------------------------------------------------
HEASim links to as few external libraries as possible, but does require the 
following packages to be installed under headas:

headas/heacore
headas/Xspec
headas/tcltk
headas/heatools 

If installing under an existing headas build, please make sure these packages
exist.


02_README_CONTENTS -------------------------------------------------------

HEASim Package Contents
-----------------------

Contents of top level heasim/

auxiliary/  	     - directory containing files not related to source code, i.e. analysis tools
BUILD_DIR/   	     - HEASoft BUILD_DIR/ dir for HEASim
functional_test/     - functional-test dir for HEASim (leftover from old code)
get_response.sh      - script to retrieve response files from heasarcdev
get_testdata.sh      - script to retrieve test data files from heasarcdev
heasimc/ 	     - main HEASim code directory
psftools/            - tool for converting ASCII PSF file to FITS format
README               - this file
run_sim.sh           - sample script to run HEASim with powerlaw source
source_data/         - directory containing input source files for some known models
skyback/	     - directory containing source code for sky background computation tool
vigtools/            - tool for converting ASCII vignette file to FITS format



Source Code
-----------

heasimc/build_simulator.c             - a quick execution of "hmake distclean, ./configure, hmake, hmake install"
heasimc/doWork.c                      - contains function definitions for "do work" stage of the heasim code
heasimc/finalize.c                    - contains function definitions for "finalize" stage of the heasim code (memory cleanup)
heasimc/heasim.c                      - HEASim main program, calls all other routines
heasimc/heasim.h                      - HEASim header file, contains function and struct declarations
heasimc/heasim.mdb                    - mission database file
heasimc/heasim.par                    - HEASim parameter file, contains run options
heasimc/initialize.c                  - contains functions definitions for "initialize" stage of the heasim code
heasimc/legacy_heasp.c                - contains routines needed from legacy heacore/heasp C library
heasimc/legacy_heasp.h                - contains function definitions for legacy heacore/heasp C library
heasimc/Makefile                      - used to build HEASim
heasimc/utils.c                       - contains low-level utility routines used throughout the skyback code

psftools/Makefile                     - used to build vigtools
psftools/psftool.c                    - main file for psf conversion tool
psftools/psftool.h                    - header file for psf conversion tool

vigtools/Makefile                     - used to build vigtools
vigtools/vigtool.c                    - main file for vignette conversion tool
vigtools/vigtool.h                    - header file for vignette converstion tool

skyback/Makefile		      - used to build sky background tool
skyback/doWork.c		      - contains function definitions for "do work" stage of the skyback code
skyback/finalize.c		      - contains function definitions for "finalize" stage of the skyback code (memory cleanup)
skyback/initialize.c		      - contains functions definitions for "initialize" stage of skyback the code
skyback/skyback.c		      - skyback main program, calls all other routines
skyback/skyback.h		      - skyback header file, contains function and struct definitions
skyback/skyback.par		      - skyback parameter file, contains run options
skyback/utils.c			      - contains low-level utility routines used throughout the skyback code



HEASim Usage Examples
---------------------

sh run_sim.sh                         - execute a point source power law simulation, observed with ASTRO-H SXS



03_README_INSTALL----------------------------------------------------------

HEASim Installation Section Contents
 1.  Introduction

 2a.  Check out source code from repository.

    OR

 2b.  Obtain and unpack source code from tarball, under existing HEASoft distribution.

 3.  Initialize the HEASoft environment

 4.  Build the simulator code.

 5.  Run a test case of HEASim.

-----------------------------------------------------------------------------
 1.  Introduction

HEASim is a simulator package that depends on some HEASoft libraries, including Xspec.
You may build the HEASim package under an existing HEASoft installation or use the 
provided custom-made (courtesy of Bryan Irby) HEASoft package that includes
only those components required to run HEASim and analyze its output.


-----------------------------------------------------------------------------
 2a.  (from repository) Checkout HEASoft subset and HEASim (two separate checkouts required)
          from the HEASOFT repository, build and install. 


Choose a top level location for the HEASoft package, I call it here <top-level>:
  
      % mkdir <top-level>	 
      % cd <top-level>

-checkout the customized HEASoft package from the HEASoft repository
 (note you must be logged into the repository before this step)

      % cvs -q -d:pserver:<username>@daria.gsfc.nasa.gov:/headas !* co heasim


-cd to <top-level>/headas, then check out the HEASim source code
 
      % cvs -q -d:pserver:<YourUsername>@daria.gsfc.nasa.gov:/heasimroot co -P heasim


-cd to <top-level>/headas/heasim, and execute the get_ scripts to retrieve
the response files and testdata from heasarcdev.  Edit these scripts with
user name if necessary:

    % sh get_response.sh      (password may be required)
    % sh get_test.data.sh     (password may be required)

    These scripts were placed here to reduce the required checkout time by
    excluding large fits files from the heasim repository.  Perhaps to be
    added to a branch later?

-----------------------------------------------------------------------------
 2b.  (from tar files) Install HEASim under an existing HEASoft installation 

If HEASoft is already installed and built under some area called <top-level>:

      % cd <top-level>/headas    

      HEASoft distribution needs heacore and Xspec packages, ie. ls should see

      <top-level>/headas/heacore
      <top-level>/headas/Xspec
      

Copy and unpack the heasim tarball under the headas directory:

     If /local/data/astrohsoft exists:
     % cp /local/data/astrohsoft/heasim.tar.gz .

     Otherwise:
     % scp <YourUsername>@heasarcdev:/local/data/astrohsoft/heasim.tar.gz .

     % tar -xvzf heasim.tar.gz

-cd to <top-level>/headas/heasim, and execute the get_ scripts to retrieve
the response files and testdata from heasarcdev.  Edit these scripts with
user name if necessary:

    % sh get_response.sh      (password may be required)
    % sh get_test.data.sh     (password may be required)

    These scripts were placed here to reduce the required checkout time by
    excluding large fits files from the heasim repository.  Perhaps to be
    added to a branch later?


*** Note about mac 64 bit vs 32 bit builds:
The build architecture of heasim must match that of the existing headas build.  This
can be particularly relevant on mac systems, which have the capability to build in 
either 32 or 64 bit.  Check the config log for x84_64 (indicating 64 bit), or 
i386 or i686 (indicating 32 bit) entries.  If necessary, in the simulator's build 
file build_simulator.sh, change the entry under the "if $system = Darwin" block
from

	--enable-mac_32bit=yes   to   --enable-mac_32bit=no

in order to force a 64-bit heasim build.


-----------------------------------------------------------------------------
 3.  Initialize the HEASoft environment 

C-shell:
      % setenv HEADAS <top-level>/headas/<machine-architecture>
      % source ${HEADAS}/headas-init.csh

Bash:
      % set HEADAS=<top-level>/headas/<machine-architecture>
      % export HEADAS
      % source ${HEADAS}/headas-init.sh


--------------------------------------------------------------------------
4.  Build the Simulator Code

To build HEASim only:

   % cd <top-level>/headas/heasim/heasimc
   % sh build_simulator.sh    (this executes hmake distclean, ./configure, hmake, hmake install automatically)

   ----------------------------------------------------------------------
   *** If you would rather not use the script to build, then do this:

   % cd <top-level>/headas/heasim/BUILD_DIR
   
   For Linux:
   % ./configure \
        --with-heatop=$HEADAS/.. \
        --with-heacore=$HEADAS/../heacore \
        --enable-shared=yes \
        --enable-symbols=yes \
        --enable-strip=no \
        --enable-guis=no \
        --with-copt=no \
        --with-cxxopt=no \
        --with-fopt=no \
        --enable-hera=no \
        --x-libraries=NONE \
        --x-includes=NONE \
        --enable-openmp=no \
        --enable-ldopt=no \
        --enable-mac_32bit=no \
        >& config.log

   For Mac:
   % ./configure \
        --with-heatop=$HEADAS/.. \
        --with-heacore=$HEADAS/../heacore \
        --enable-shared=yes \
        --enable-symbols=yes \
        --enable-strip=no \
        --enable-hera=no \
        --x-libraries=NONE \
        --x-includes=NONE \
        --with-copt= \
        --with-cxxopt= \
        --with-fopt= \
        --enable-ldopt=yes \
        --enable-mac_32bit=yes \
        >& config.log

    % hmake
    % hmake install	
    -------------------------------------------------------------------

*** OR ***

To rebuild ALL OF HEADAS:

   -cd to <top-level>/headas/BUILD_DIR (to build all of headas)
    
    % ./hmake clean
    % ./hmake > & build.log
    % ./hmake install > & install.log

 
-----------------------------------------------------------------------------
 5.  Run a test case of HEASim 

     % cd <top-level>/headas/heasim
     %  sh run_sim.sh

     This makes a directory /output if not already exists, and deposits output fits
     file astroH_sxs_plaw.fits into that output directory.


< INSERT FUNCTIONAL-TEST USAGE INSTRUCTIONS >

< INSERT ANALYSIS INSTRUCTIONS >



04_README_VERSION_HISTORY --------------------------------------------------------------------------

---------------HEASim Source-code Revision History--------------------------------------------------

20140407, DAR

-- discarded old heasim code, began from scratch.


