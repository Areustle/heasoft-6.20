? 2
print summary of all commands or single command
    Syntax: ?{<commandName>}

addcomp 2
add component to a model
    Syntax: addcomp [Model Name:]<new component number> componentName

arf 4
reset auxiliary response file
    Syntax: arf none
            arf [source number:spectrum number] <filename{range}>
    (many options: see help for full syntax)

autosave 2
set frequency of auto-saving.
    Syntax: autosave <off | n>

backgrnd 4
reset background files
    Syntax: backgrnd none
            backgrnd [spectrum number] <filename{range}>
    (many options: see help for full syntax)

bayes 2
set up Bayesian inference
    Syntax: bayes off|on|cons| <mod param #> <prior type> <hyperparameters>

chain 2
Run a Monte Carlo Markov Chain.
    Syntax: chain [burn <burn-length>|clear|info|length|load|rand|recalc|run|stat|unload]

chatter 2
set the chatter level
    Syntax: chatter <console> {<log>}

comsum 2
print this summary
    Syntax: comsum {<commandName>}

corfile 4
reset correction files
    Syntax: corfile none
            corfile [spectrum number] <filename{range}>
    (many options: see help for full syntax)

cornorm 2
reset normalization used in correcting the background
    Syntax: cornorm <range1> <range2>...  norm (sets default range to last range entered)

cosmo 2
set cosmological parameters
    Syntax: cosmo [H0 , q0, lambda0] (if no arguments are entered, current setting is printed)

cpd 2
change plotting device
    Syntax: cpd (device name)

data 3
input data files
    Syntax: data <none> | [n:m] <filename{range}> 
    (many options: see help for full syntax)

delcomp 2
delete component from model
    Syntax: delcomp [Model Name:]component number

diagrsp 2
Create a diagonal response.
    Syntax: diagrsp

dummyrsp 2
create 'dummy' response
    Syntax: [<Low Energy> [<High Energy> [<# of ranges> [<log or linear> [<channel offset> [<channel width>]]]]]]

editmod 2
add, replace or delete a component in a model
    Syntax: editmod [modelName:]<model expression>

energies 5
Define an energy array to be used for model calculations in place of
          response energy arrays
    Syntax: energies [reset|scale <factor>|<asciiFileName>|<first range spec> [<additional range spec> ...]]
    where <first range spec>=::<lowEng> <highEng> <nEngs> log|lin
    and <additional range spec>=::<highEng> <nEngs> log|lin

eqwidth 2
calculate equivalent width
    Syntax: eqwidth [[RANGE <frac range>] <model component number>]... [err <number> <level> | noerr]

error 2
find confidence region
    Syntax: error [[stopat <ntrial> <tol>] [maximum <redchi>] [<delta fit stat>] [<model param range>...]]

uncertain 2
find confidence region
    Syntax: uncertain [[stopat <ntrial> <tol>] [maximum <redchi>] [<delta fit stat>] [<model param range>...]]

exit 2
end the session (also Ctrl-D)
    Syntax: exit

fakeit 2
create simulated observations from model
    Syntax: fakeit <none> | <spectrum number> [ background files] [correction files]

fit 2
minimize statistic using current fitting algorithm
    Syntax: fit [#trials] [critical delta] <method-specific settings>

flux 2
calculate the model flux
    Syntax: flux lowEnergy highEnergy [err #trials confidence level | noerr]

freeze 2
fix a fit parameter
    Syntax: freeze <modelName>:{m1-n1,m2-n2,...}, for integer parameter ranges and for optional model names

ftest 2
calculate f-test probability
    Syntax: ftest chi2 dof2 chi1 dof1 (where chi2 < chi1)

gain 2
change response gain for a dataset
    Syntax: gain <fit|nofit> or: gain <spectrum #> <slope> <intercept>

genetic 2
set genetic algorithm parameters.
    Syntax: Not Implemented

goodness 2
Perform a Monte Carlo calculation of the goodness-of-fit
    Syntax: goodness [# realizations] <sim|nosim>

help 2
Invoke XSPEC help system
    Syntax: help  [command] [subcommand]

identify 2
List possible lines in the specified energy range
    Syntax: identify <energy> <delta_energy> <redshift> <line_list>

ignore 5
ignore PHA channels
    Syntax: ignore <bad>
            ignore s1-<s2|*|**>:n1-n2 ..., integer spectrum number and channel range
            ignore s1-<s2|*|**>:r1-r2 ..., integer spectrum number and real energy range
    (multiple ranges are allowed)

improve 3
Run the MINUIT improve command which attempts to find a new local minimum in the 
         vicinity of the current minimum. This gives some global minimization capability.
    Syntax: improve

initpackage 2
Prepare a package containing locally written models for use with XSPEC";
     Syntax: initpackage <packageName> <model init file> [<directory>]

iplot 3
enter an interactive PLT plot command
    Syntax: iplot <?|[plot command]| >
    (iplot with no arguments acts like "iplot data")

lmod 2
load a package containing locally written models into XSPEC
     Syntax: lmod <packageName> [ <directory> ]

log 2	
open/close output file
     Syntax: log (<filename>|none)

lumin 2
calculate the model luminosity
    Syntax: flux lowEnergy highEnergy [err #trials confidence level | noerr] redshift

margin 3
(Bayes only) marginalize over uninteresting parameters
    Syntax: margin  <step spec> [ <step spec> ...
     where <step spec> ::= [log|nolog] <param index> <low> <high> <# steps>

mdefine 2
Define an algebraic model component
    Syntax: mdefine [<name> [<expression> [:[<type>] [<emin emax>]]]]

model 2
define a model
    Syntax: model {<name>:<source>} <model string>

newpar 2
change model parameters for specified or unnamed model
    Syntax: newpar {modelName:}<parameter range> value {<delta> <lower> <bot> <top> <higher>}

notice 5
notice PHA channels
    Syntax: notice all
            notice <spectrum number range>:<channel range> ...
            notice <spectrum number range>:<energy range> ...
     (multiple ranges are allowed)

query 2
change XSPEC querying (ask questions or use supplied answer)
    Syntax: query ( on | yes | no )

quit 2
end the session (also Ctrl-D)
    Syntax: quit

recornrm 2
adjust correction norms
    Syntax: Not Implemented - replaced by recorn model

renorm 2
adjust the model norms
    Syntax: renorm  [ |?|none|prefit|auto ]

rerror 2
find confidence region
    Syntax: rerror [[stopat <ntrial> <tol>] [maximum <redchi>] [<delta fit stat>] [<response param range>...]]

response 4
reset response files
    Syntax: response none
            response [source number:spectrum number] <filename>
    (many options: see help for full syntax)

rfreeze 2
fix a fit response parameter
    Syntax: rfreeze [<source number>:]{m1-n1,m2-n2,...}, for integer parameter ranges and for optional source numbers

rmodel 4
assign a response model to a detector response
   Syntax: rmodel [<source num>:]<spec num> <model name>
           rmodel [<source num>:]<spec num> none
           rmodel clear

rnewpar 2
change response parameters for specified source
    Syntax: rnewpar {source num:}<parameter range> value {<delta> <lower> <bot> <top> <higher>}

rthaw 2
allow a previously fixed fit response parameter to vary
    Syntax: rthaw [<source number>:]{m1-n1,m2-n2,...}, for integer parameter ranges and for optional source numbers

runtie 2
unlink response parameter(s) previously tied to other parameters
    Syntax: runtie [<source number>:]<parameter range>

save 2
save current state to a file
    Syntax: save <model|files|all> [filename]

script 2
open/close session script
     Syntax: script [filename | none ]

setplot 3
modify plot / change plot device etc
    Syntax: setplot add | channel | command | delete | device | energy | group | 
                    id | list | noadd | noid | rebin | wave | xlog | ylog

show 2
display information about current session state
    Syntax: show

steppar 3
Perform fits while stepping the value of parameters through given range(s)
    Syntax: steppar  <step spec> [ <step spec> ... ]
     where  <step spec> ::= [log|nolog] [current|best] <param index> <low> <high> <# steps>

systematic 2
set systematic error proportional to model
    Syntax: systematic <real value>

tclout 2
write values to tcl variable $xspec_tclout
    Syntax: tclout {many options}

thaw 2
allow a previously fixed fit parameter to vary
    Syntax: thaw [<model name>:]{m1-n1,m2-n2,...}, for integer parameter ranges and optional model name

thleqw 2
fluorescent line equivalent width
    Syntax: Not Implemented";

time 2
display elapsed time since last call and beginning of program run
    Syntax: time

untie 2
unlink parameter(s) previously tied to other parameters
    Syntax: untie [<model name>:]{range}

version 2
print version string
    Syntax: version (no arguments)

xset 3
Choose from the following XSET options:
    abund   cosmo   delta   mdatadir   method   seed   statistic   weight   xsect
    Model string parameters
