//C++
//
// Generated by cxsetup.  Do not edit manually.

#include <funcWrappers.h>
#include <functionMap.h>
#include <xsTypes.h>
#include <cfortran.h>

void cppModelWrapper(const double* energy, int nFlux, const double* params, 
        int spectrumNumber, double* flux, double* fluxError, const char* initStr, 
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
        int, RealArray&, RealArray&, const string&));

void fcppModelWrapper(const float* energy, int nFlux, const float* params, 
        int spectrumNumber, float* flux, float* fluxError,  
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
	int, RealArray&, RealArray&, const string&));


void cppModelWrapper(const double* energy, int nFlux, const double* params, 
        int spectrumNumber, double* flux, double* fluxError, const char* initStr, 
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
        int, RealArray&, RealArray&, const string&))
{
   // Assumes energy points to arrays of size nFlux+1, flux and fluxError
   // point to arrays of size nFlux (though they need not be initialized),
   // and params points to an array of size nPar.
   RealArray energy_C(energy, (size_t)nFlux+1);
   RealArray params_C(params, nPar);
   RealArray flux_C(flux, (size_t)nFlux);
   RealArray fluxError_C(fluxError, (size_t)nFlux);
   string cppStr;
   if(initStr && strlen(initStr))
      cppStr = initStr;
   (*cppFunc)(energy_C, params_C, spectrumNumber, flux_C, fluxError_C, cppStr);
   for (int i=0; i<nFlux; ++i)
   {
      flux[i] = flux_C[i];
   }
   if (fluxError_C.size())
   {
      for (int i=0; i<nFlux; ++i)
      {
         fluxError[i] = fluxError_C[i];
      }
   }
} 

void fcppModelWrapper(const float* energy, int nFlux, const float* params, 
        int spectrumNumber, float* flux, float* fluxError, 
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
        int, RealArray&, RealArray&, const string&))
{
   // Assumes energy points to arrays of size nFlux+1, flux and fluxError
   // point to arrays of size nFlux (though they need not be initialized),
   // and params points to an array of size nPar.
   RealArray energy_C(0.0, (size_t)nFlux+1);
   RealArray params_C(0.0, nPar);
   RealArray flux_C(0.0, (size_t)nFlux);
   RealArray fluxError_C(0.0, (size_t)nFlux);
   string cppStr;

   for (int i=0; i<nFlux+1; ++i)
   {
      energy_C[i] = (double)energy[i];
   }
   for (int i=0; i<nPar; ++i)
   {
      params_C[i] = (double)params[i];
   }
   for (int i=0; i<nFlux; ++i)
   {
      flux_C[i] = (double)flux[i];
   }
   if (fluxError)
   {
      for (int i=0; i<nFlux; ++i)
      {
         fluxError_C[i] = (double)fluxError[i];
      }
   }


   (*cppFunc)(energy_C, params_C, spectrumNumber, flux_C, fluxError_C, cppStr);

   for (int i=0; i<nFlux; ++i)
   {
      flux[i] = (float)flux_C[i];
   }
   if (fluxError_C.size())
   {
      for (int i=0; i<nFlux; ++i)
      {
         fluxError[i] = (float)fluxError_C[i];
      }
   }
} 

