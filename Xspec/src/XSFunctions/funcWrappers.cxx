//C++
//
// Generated by cxsetup.  Do not edit manually.

#include <funcWrappers.h>
#include <functionMap.h>
#include <xsTypes.h>
#include <cfortran.h>

void cppModelWrapper(const double* energy, int nFlux, const double* params, 
        int spectrumNumber, double* flux, double* fluxError, const char* initStr, 
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
        int, RealArray&, RealArray&, const string&));

void fcppModelWrapper(const float* energy, int nFlux, const float* params, 
        int spectrumNumber, float* flux, float* fluxError,  
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
	int, RealArray&, RealArray&, const string&));


void cppModelWrapper(const double* energy, int nFlux, const double* params, 
        int spectrumNumber, double* flux, double* fluxError, const char* initStr, 
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
        int, RealArray&, RealArray&, const string&))
{
   // Assumes energy points to arrays of size nFlux+1, flux and fluxError
   // point to arrays of size nFlux (though they need not be initialized),
   // and params points to an array of size nPar.
   RealArray energy_C(energy, (size_t)nFlux+1);
   RealArray params_C(params, nPar);
   RealArray flux_C(flux, (size_t)nFlux);
   RealArray fluxError_C(fluxError, (size_t)nFlux);
   string cppStr;
   if(initStr && strlen(initStr))
      cppStr = initStr;
   (*cppFunc)(energy_C, params_C, spectrumNumber, flux_C, fluxError_C, cppStr);
   for (int i=0; i<nFlux; ++i)
   {
      flux[i] = flux_C[i];
   }
   if (fluxError_C.size())
   {
      for (int i=0; i<nFlux; ++i)
      {
         fluxError[i] = fluxError_C[i];
      }
   }
} 

void fcppModelWrapper(const float* energy, int nFlux, const float* params, 
        int spectrumNumber, float* flux, float* fluxError, 
        int nPar, void (*cppFunc)(const RealArray&, const RealArray&,
        int, RealArray&, RealArray&, const string&))
{
   // Assumes energy points to arrays of size nFlux+1, flux and fluxError
   // point to arrays of size nFlux (though they need not be initialized),
   // and params points to an array of size nPar.
   RealArray energy_C(0.0, (size_t)nFlux+1);
   RealArray params_C(0.0, nPar);
   RealArray flux_C(0.0, (size_t)nFlux);
   RealArray fluxError_C(0.0, (size_t)nFlux);
   string cppStr;

   for (int i=0; i<nFlux+1; ++i)
   {
      energy_C[i] = (double)energy[i];
   }
   for (int i=0; i<nPar; ++i)
   {
      params_C[i] = (double)params[i];
   }
   for (int i=0; i<nFlux; ++i)
   {
      flux_C[i] = (double)flux[i];
   }
   if (fluxError)
   {
      for (int i=0; i<nFlux; ++i)
      {
         fluxError_C[i] = (double)fluxError[i];
      }
   }


   (*cppFunc)(energy_C, params_C, spectrumNumber, flux_C, fluxError_C, cppStr);

   for (int i=0; i<nFlux; ++i)
   {
      flux[i] = (float)flux_C[i];
   }
   if (fluxError_C.size())
   {
      for (int i=0; i<nFlux; ++i)
      {
         fluxError[i] = (float)fluxError_C[i];
      }
   }
} 

void f_agauss(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_agauss,AGAUSS,agauss,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_agauss,DAGAUSS,dagauss,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_agauss(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, agauss);
}

void C_agauss(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, agauss);
}

void f_apec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_apec,APEC,apec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_apec,DAPEC,dapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_apec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, apec);
}

void C_apec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, apec);
}

void f_bapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_bapec,BAPEC,bapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_bapec,DBAPEC,dbapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_bapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, bapec);
}

void C_bapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, bapec);
}

void f_btapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_btapec,BTAPEC,btapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_btapec,DBTAPEC,dbtapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_btapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, btapec);
}

void C_btapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, btapec);
}

void f_xsbexrav(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xsbexrav,XSBEXRAV,xsbexrav,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xsbexrav,DXSBEXRAV,dxsbexrav,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xsbexrav(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 9;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xsbexrav);
}

void C_xsbexrav(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 9;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xsbexrav);
}

void f_xsbexriv(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xsbexriv,XSBEXRIV,xsbexriv,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xsbexriv,DXSBEXRIV,dxsbexriv,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xsbexriv(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 11;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xsbexriv);
}

void C_xsbexriv(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 11;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xsbexriv);
}

void f_brokenPowerLaw(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_brokenPowerLaw,XSBPLW,xsbplw,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_brokenPowerLaw,DXSBPLW,dxsbplw,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_brokenPowerLaw(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, brokenPowerLaw);
}

void C_brokenPowerLaw(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, brokenPowerLaw);
}

void f_broken2PowerLaw(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_broken2PowerLaw,XSB2PL,xsb2pl,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_broken2PowerLaw,DXSB2PL,dxsb2pl,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_broken2PowerLaw(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, broken2PowerLaw);
}

void C_broken2PowerLaw(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, broken2PowerLaw);
}

void f_bvapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_bvapec,BVAPEC,bvapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_bvapec,DBVAPEC,dbvapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_bvapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 16;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, bvapec);
}

void C_bvapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 16;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, bvapec);
}

void f_bvtapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_bvtapec,BVTAPEC,bvtapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_bvtapec,DBVTAPEC,dbvtapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_bvtapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 17;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, bvtapec);
}

void C_bvtapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 17;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, bvtapec);
}

void f_bvvapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_bvvapec,BVVAPEC,bvvapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_bvvapec,DBVVAPEC,dbvvapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_bvvapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 33;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, bvvapec);
}

void C_bvvapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 33;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, bvvapec);
}

void f_bvvtapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_bvvtapec,BVVTAPEC,bvvtapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_bvvtapec,DBVVTAPEC,dbvvtapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_bvvtapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 34;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, bvvtapec);
}

void C_bvvtapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 34;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, bvvtapec);
}

void f_carbatm(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_carbatm,CARBATM,carbatm,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_carbatm,DCARBATM,dcarbatm,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_carbatm(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, carbatm);
}

void C_carbatm(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, carbatm);
}

void f_cemVMekal(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_cemVMekal,CEVMKL,cevmkl,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_cemVMekal,DCEVMKL,dcevmkl,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_cemVMekal(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 19;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, cemVMekal);
}

void C_cemVMekal(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 19;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, cemVMekal);
}

void f_xscflw(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xscflw,XSCFLW,xscflw,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xscflw,DXSCFLW,dxscflw,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xscflw(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xscflw);
}

void C_xscflw(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xscflw);
}

void f_xscompps(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xscompps,XSCOMPPS,xscompps,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xscompps,DXSCOMPPS,dxscompps,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xscompps(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 19;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xscompps);
}

void C_xscompps(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 19;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xscompps);
}

void f_xscompth(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xscompth,XSCOMPTH,xscompth,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xscompth,DXSCOMPTH,dxscompth,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xscompth(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 20;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xscompth);
}

void C_xscompth(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 20;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xscompth);
}

void f_cplinear(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_cplinear,CPLINEAR,cplinear,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_cplinear,DCPLINEAR,dcplinear,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_cplinear(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 20;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, cplinear);
}

void C_cplinear(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 20;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, cplinear);
}

void f_cutoffPowerLaw(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_cutoffPowerLaw,XSPLCO,xsplco,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_cutoffPowerLaw,DXSPLCO,dxsplco,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_cutoffPowerLaw(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, cutoffPowerLaw);
}

void C_cutoffPowerLaw(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, cutoffPowerLaw);
}

void f_xseqpair(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xseqpair,XSEQPAIR,xseqpair,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xseqpair,DXSEQPAIR,dxseqpair,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xseqpair(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 20;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xseqpair);
}

void C_xseqpair(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 20;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xseqpair);
}

void f_xseqth(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xseqth,XSEQTH,xseqth,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xseqth,DXSEQTH,dxseqth,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xseqth(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 20;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xseqth);
}

void C_xseqth(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 20;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xseqth);
}

void f_equil(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_equil,EQUIL,equil,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_equil,DEQUIL,dequil,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_equil(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, equil);
}

void C_equil(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, equil);
}

void f_gaussianLine(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_gaussianLine,GAUSSIANLINE,gaussianline,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_gaussianLine,DGAUSSIANLINE,dgaussianline,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_gaussianLine(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, gaussianLine);
}

void C_gaussianLine(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, gaussianLine);
}

void f_gaussDem(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_gaussDem,GAUSSDEM,gaussdem,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_gaussDem,DGAUSSDEM,dgaussdem,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_gaussDem(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 6;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, gaussDem);
}

void C_gaussDem(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 6;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, gaussDem);
}

void f_gnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_gnei,GNEI,gnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_gnei,DGNEI,dgnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_gnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, gnei);
}

void C_gnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, gnei);
}

void f_hatm(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_hatm,HATM,hatm,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_hatm,DHATM,dhatm,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_hatm(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, hatm);
}

void C_hatm(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, hatm);
}

void f_kerrbb(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_kerrbb,KERRBB,kerrbb,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_kerrbb,DKERRBB,dkerrbb,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_kerrbb(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 9;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, kerrbb);
}

void C_kerrbb(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 9;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, kerrbb);
}

void f_kerrdisk(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_kerrdisk,KERRDISK,kerrdisk,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_kerrdisk,DKERRDISK,dkerrdisk,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_kerrdisk(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 7;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, kerrdisk);
}

void C_kerrdisk(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 7;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, kerrdisk);
}

void f_xslaor(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xslaor,XSLAOR,xslaor,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xslaor,DXSLAOR,dxslaor,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xslaor(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xslaor);
}

void C_xslaor(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xslaor);
}

void f_laor2(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_laor2,LAOR2,laor2,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_laor2,DLAOR2,dlaor2,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_laor2(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 7;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, laor2);
}

void C_laor2(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 7;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, laor2);
}

void f_lorentzianLine(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_lorentzianLine,LORENTZIANLINE,lorentzianline,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_lorentzianLine,DLORENTZIANLINE,dlorentzianline,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_lorentzianLine(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, lorentzianLine);
}

void C_lorentzianLine(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, lorentzianLine);
}

void f_meka(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_meka,MEKA,meka,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_meka,DMEKA,dmeka,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_meka(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, meka);
}

void C_meka(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, meka);
}

void f_mekal(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_mekal,MEKAL,mekal,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_mekal,DMEKAL,dmekal,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_mekal(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, mekal);
}

void C_mekal(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, mekal);
}

void f_xsmkcf(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xsmkcf,XSMKCF,xsmkcf,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xsmkcf,DXSMKCF,dxsmkcf,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xsmkcf(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xsmkcf);
}

void C_xsmkcf(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xsmkcf);
}

void f_nei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_nei,NEI,nei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_nei,DNEI,dnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_nei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, nei);
}

void C_nei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, nei);
}

void f_nlapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_nlapec,NLAPEC,nlapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_nlapec,DNLAPEC,dnlapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_nlapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, nlapec);
}

void C_nlapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, nlapec);
}

void f_npshock(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_npshock,NPSHOCK,npshock,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_npshock,DNPSHOCK,dnpshock,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_npshock(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 6;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, npshock);
}

void C_npshock(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 6;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, npshock);
}

void f_xsnteea(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xsnteea,XSNTEEA,xsnteea,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xsnteea,DXSNTEEA,dxsnteea,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xsnteea(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 15;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xsnteea);
}

void C_xsnteea(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 15;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xsnteea);
}

void f_nthcomp(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_nthcomp,NTHCOMP,nthcomp,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_nthcomp,DNTHCOMP,dnthcomp,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_nthcomp(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, nthcomp);
}

void C_nthcomp(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, nthcomp);
}

void f_xspexrav(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xspexrav,XSPEXRAV,xspexrav,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xspexrav,DXSPEXRAV,dxspexrav,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xspexrav(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 7;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xspexrav);
}

void C_xspexrav(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 7;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xspexrav);
}

void f_xspexriv(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xspexriv,XSPEXRIV,xspexriv,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xspexriv,DXSPEXRIV,dxspexriv,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xspexriv(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 9;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xspexriv);
}

void C_xspexriv(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 9;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xspexriv);
}

void f_powerLaw(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_powerLaw,XSPWLW,xspwlw,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_powerLaw,DXSPWLW,dxspwlw,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_powerLaw(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 1;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, powerLaw);
}

void C_powerLaw(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 1;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, powerLaw);
}

void f_pshock(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_pshock,PSHOCK,pshock,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_pshock,DPSHOCK,dpshock,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_pshock(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, pshock);
}

void C_pshock(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, pshock);
}

void f_raysmith(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_raysmith,RAYSMITH,raysmith,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_raysmith,DRAYSMITH,draysmith,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_raysmith(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, raysmith);
}

void C_raysmith(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, raysmith);
}

void f_rnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_rnei,RNEI,rnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_rnei,DRNEI,drnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_rnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, rnei);
}

void C_rnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, rnei);
}

void f_sedov(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_sedov,SEDOV,sedov,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_sedov,DSEDOV,dsedov,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_sedov(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, sedov);
}

void C_sedov(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, sedov);
}

void f_sirf(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_sirf,SIRF,sirf,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_sirf,DSIRF,dsirf,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_sirf(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 9;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, sirf);
}

void C_sirf(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 9;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, sirf);
}

void f_snapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_snapec,SNAPEC,snapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_snapec,DSNAPEC,dsnapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_snapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 6;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, snapec);
}

void C_snapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 6;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, snapec);
}

void f_tapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tapec,TAPEC,tapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tapec,DTAPEC,dtapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tapec);
}

void C_tapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tapec);
}

void f_vapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vapec,VAPEC,vapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vapec,DVAPEC,dvapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 15;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vapec);
}

void C_vapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 15;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vapec);
}

void f_vequil(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vequil,VEQUIL,vequil,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vequil,DVEQUIL,dvequil,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vequil(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 14;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vequil);
}

void C_vequil(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 14;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vequil);
}

void f_vgaussDem(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vgaussDem,VGAUSSDEM,vgaussdem,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vgaussDem,DVGAUSSDEM,dvgaussdem,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vgaussDem(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 19;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vgaussDem);
}

void C_vgaussDem(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 19;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vgaussDem);
}

void f_vgnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vgnei,VGNEI,vgnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vgnei,DVGNEI,dvgnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vgnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 17;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vgnei);
}

void C_vgnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 17;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vgnei);
}

void f_vmeka(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vmeka,VMEKA,vmeka,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vmeka,DVMEKA,dvmeka,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vmeka(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 17;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vmeka);
}

void C_vmeka(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 17;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vmeka);
}

void f_vmekal(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vmekal,VMEKAL,vmekal,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vmekal,DVMEKAL,dvmekal,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vmekal(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 18;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vmekal);
}

void C_vmekal(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 18;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vmekal);
}

void f_xsvmcf(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xsvmcf,XSVMCF,xsvmcf,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xsvmcf,DXSVMCF,dxsvmcf,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xsvmcf(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 18;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xsvmcf);
}

void C_xsvmcf(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 18;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xsvmcf);
}

void f_vnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vnei,VNEI,vnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vnei,DVNEI,dvnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 16;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vnei);
}

void C_vnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 16;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vnei);
}

void f_vnpshock(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vnpshock,VNPSHOCK,vnpshock,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vnpshock,DVNPSHOCK,dvnpshock,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vnpshock(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 18;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vnpshock);
}

void C_vnpshock(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 18;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vnpshock);
}

void f_voigtLine(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_voigtLine,VOIGTLINE,voigtline,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_voigtLine,DVOIGTLINE,dvoigtline,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_voigtLine(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, voigtLine);
}

void C_voigtLine(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, voigtLine);
}

void f_vpshock(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vpshock,VPSHOCK,vpshock,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vpshock,DVPSHOCK,dvpshock,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vpshock(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 17;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vpshock);
}

void C_vpshock(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 17;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vpshock);
}

void f_vraysmith(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vraysmith,VRAYSMITH,vraysmith,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vraysmith,DVRAYSMITH,dvraysmith,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vraysmith(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 14;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vraysmith);
}

void C_vraysmith(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 14;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vraysmith);
}

void f_vrnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vrnei,VRNEI,vrnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vrnei,DVRNEI,dvrnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vrnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 17;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vrnei);
}

void C_vrnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 17;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vrnei);
}

void f_vsedov(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vsedov,VSEDOV,vsedov,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vsedov,DVSEDOV,dvsedov,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vsedov(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 17;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vsedov);
}

void C_vsedov(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 17;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vsedov);
}

void f_vtapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vtapec,VTAPEC,vtapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vtapec,DVTAPEC,dvtapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vtapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 16;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vtapec);
}

void C_vtapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 16;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vtapec);
}

void f_vvapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvapec,VVAPEC,vvapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvapec,DVVAPEC,dvvapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 32;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvapec);
}

void C_vvapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 32;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvapec);
}

void f_vvgnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvgnei,VVGNEI,vvgnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvgnei,DVVGNEI,dvvgnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvgnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 34;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvgnei);
}

void C_vvgnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 34;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvgnei);
}

void f_vvnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvnei,VVNEI,vvnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvnei,DVVNEI,dvvnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 33;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvnei);
}

void C_vvnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 33;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvnei);
}

void f_vvnpshock(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvnpshock,VVNPSHOCK,vvnpshock,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvnpshock,DVVNPSHOCK,dvvnpshock,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvnpshock(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 35;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvnpshock);
}

void C_vvnpshock(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 35;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvnpshock);
}

void f_vvpshock(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvpshock,VVPSHOCK,vvpshock,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvpshock,DVVPSHOCK,dvvpshock,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvpshock(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 34;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvpshock);
}

void C_vvpshock(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 34;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvpshock);
}

void f_vvrnei(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvrnei,VVRNEI,vvrnei,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvrnei,DVVRNEI,dvvrnei,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvrnei(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 34;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvrnei);
}

void C_vvrnei(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 34;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvrnei);
}

void f_vvsedov(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvsedov,VVSEDOV,vvsedov,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvsedov,DVVSEDOV,dvvsedov,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvsedov(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 34;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvsedov);
}

void C_vvsedov(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 34;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvsedov);
}

void f_vvtapec(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vvtapec,VVTAPEC,vvtapec,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vvtapec,DVVTAPEC,dvvtapec,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vvtapec(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 33;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vvtapec);
}

void C_vvtapec(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 33;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vvtapec);
}

void f_zagauss(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_zagauss,ZAGAUSS,zagauss,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_zagauss,DZAGAUSS,dzagauss,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_zagauss(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, zagauss);
}

void C_zagauss(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, zagauss);
}

void f_xszgau(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xszgau,XSZGAU,xszgau,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xszgau,DXSZGAU,dxszgau,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xszgau(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xszgau);
}

void C_xszgau(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xszgau);
}

void f_zpowerLaw(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_zpowerLaw,XSZPLW,xszplw,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_zpowerLaw,DXSZPLW,dxszplw,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_zpowerLaw(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, zpowerLaw);
}

void C_zpowerLaw(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, zpowerLaw);
}

void f_xsabsori(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xsabsori,XSABSORI,xsabsori,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xsabsori,DXSABSORI,dxsabsori,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xsabsori(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 6;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xsabsori);
}

void C_xsabsori(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 6;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xsabsori);
}

void f_gaussianAbsorptionLine(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_gaussianAbsorptionLine,GAUSSIANABSORPTIONLINE,gaussianabsorptionline,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_gaussianAbsorptionLine,DGAUSSIANABSORPTIONLINE,dgaussianabsorptionline,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_gaussianAbsorptionLine(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, gaussianAbsorptionLine);
}

void C_gaussianAbsorptionLine(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, gaussianAbsorptionLine);
}

void f_xspwab(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xspwab,XSPWAB,xspwab,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xspwab,DXSPWAB,dxspwab,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xspwab(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xspwab);
}

void C_xspwab(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xspwab);
}

void f_superExpCutoff(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_superExpCutoff,SPEXPCUT,spexpcut,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_superExpCutoff,DSPEXPCUT,dspexpcut,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_superExpCutoff(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, superExpCutoff);
}

void C_superExpCutoff(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, superExpCutoff);
}

void f_tbabs(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tbabs,TBABS,tbabs,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tbabs,DTBABS,dtbabs,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tbabs(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 1;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tbabs);
}

void C_tbabs(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 1;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tbabs);
}

void f_tbfeo(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tbfeo,TBFEO,tbfeo,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tbfeo,DTBFEO,dtbfeo,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tbfeo(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tbfeo);
}

void C_tbfeo(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tbfeo);
}

void f_tbgas(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tbgas,TBGAS,tbgas,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tbgas,DTBGAS,dtbgas,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tbgas(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tbgas);
}

void C_tbgas(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tbgas);
}

void f_tbgrain(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tbgrain,TBGRAIN,tbgrain,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tbgrain,DTBGRAIN,dtbgrain,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tbgrain(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 6;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tbgrain);
}

void C_tbgrain(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 6;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tbgrain);
}

void f_tbvabs(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tbvabs,TBVABS,tbvabs,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tbvabs,DTBVABS,dtbvabs,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tbvabs(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 42;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tbvabs);
}

void C_tbvabs(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 42;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tbvabs);
}

void f_tbpcf(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tbpcf,TBPCF,tbpcf,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tbpcf,DTBPCF,dtbpcf,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tbpcf(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tbpcf);
}

void C_tbpcf(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tbpcf);
}

void f_tbrel(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_tbrel,TBREL,tbrel,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_tbrel,DTBREL,dtbrel,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_tbrel(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 42;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, tbrel);
}

void C_tbrel(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 42;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, tbrel);
}

void f_xscatmodel(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xscatmodel,XSCATMODEL,xscatmodel,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xscatmodel,DXSCATMODEL,dxscatmodel,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xscatmodel(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xscatmodel);
}

void C_xscatmodel(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xscatmodel);
}

void f_ztbabs(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_ztbabs,ZTBABS,ztbabs,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_ztbabs,DZTBABS,dztbabs,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_ztbabs(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, ztbabs);
}

void C_ztbabs(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, ztbabs);
}

void f_cflux(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_cflux,CFLUX,cflux,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_cflux,DCFLUX,dcflux,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_cflux(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, cflux);
}

void C_cflux(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, cflux);
}

void f_clumin(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_clumin,CLUMIN,clumin,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_clumin,DCLUMIN,dclumin,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_clumin(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, clumin);
}

void C_clumin(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, clumin);
}

void f_cpflux(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_cpflux,CPFLUX,cpflux,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_cpflux,DCPFLUX,dcpflux,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_cpflux(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, cpflux);
}

void C_cpflux(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, cpflux);
}

void f_xsgsmt(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xsgsmt,XSGSMT,xsgsmt,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xsgsmt,DXSGSMT,dxsgsmt,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xsgsmt(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xsgsmt);
}

void C_xsgsmt(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xsgsmt);
}

void f_ireflct(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_ireflct,IREFLCT,ireflct,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_ireflct,DIREFLCT,direflct,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_ireflct(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 7;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, ireflct);
}

void C_ireflct(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 7;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, ireflct);
}

void f_kdblur(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_kdblur,KDBLUR,kdblur,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_kdblur,DKDBLUR,dkdblur,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_kdblur(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, kdblur);
}

void C_kdblur(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, kdblur);
}

void f_kdblur2(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_kdblur2,KDBLUR2,kdblur2,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_kdblur2,DKDBLUR2,dkdblur2,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_kdblur2(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 6;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, kdblur2);
}

void C_kdblur2(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 6;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, kdblur2);
}

void f_spinconv(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_spinconv,SPINCONV,spinconv,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_spinconv,DSPINCONV,dspinconv,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_spinconv(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 7;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, spinconv);
}

void C_spinconv(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 7;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, spinconv);
}

void f_xslsmt(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xslsmt,XSLSMT,xslsmt,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xslsmt,DXSLSMT,dxslsmt,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xslsmt(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 2;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xslsmt);
}

void C_xslsmt(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 2;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xslsmt);
}

void f_PartialCovering(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_PartialCovering,PRTCOV,prtcov,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_PartialCovering,DPRTCOV,dprtcov,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_PartialCovering(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 1;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, PartialCovering);
}

void C_PartialCovering(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 1;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, PartialCovering);
}

void f_rdblur(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_rdblur,RDBLUR,rdblur,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_rdblur,DRDBLUR,drdblur,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_rdblur(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 4;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, rdblur);
}

void C_rdblur(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 4;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, rdblur);
}

void f_reflct(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_reflct,REFLCT,reflct,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_reflct,DREFLCT,dreflct,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_reflct(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, reflct);
}

void C_reflct(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, reflct);
}

void f_rfxconv(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_rfxconv,RFXCONV,rfxconv,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_rfxconv,DRFXCONV,drfxconv,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_rfxconv(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 5;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, rfxconv);
}

void C_rfxconv(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 5;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, rfxconv);
}

void f_simpl(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_simpl,SIMPL,simpl,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_simpl,DSIMPL,dsimpl,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_simpl(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 3;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, simpl);
}

void C_simpl(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 3;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, simpl);
}

void f_vashift(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vashift,VASHIFT,vashift,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vashift,DVASHIFT,dvashift,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vashift(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 1;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vashift);
}

void C_vashift(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 1;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vashift);
}

void f_vmshift(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_vmshift,VMSHIFT,vmshift,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_vmshift,DVMSHIFT,dvmshift,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_vmshift(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 1;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, vmshift);
}

void C_vmshift(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 1;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, vmshift);
}

void f_xilconv(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_xilconv,XILCONV,xilconv,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_xilconv,DXILCONV,dxilconv,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_xilconv(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 6;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, xilconv);
}

void C_xilconv(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 6;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, xilconv);
}

void f_zashift(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_zashift,ZASHIFT,zashift,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_zashift,DZASHIFT,dzashift,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_zashift(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 1;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, zashift);
}

void C_zashift(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 1;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, zashift);
}

void f_zmshift(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_zmshift,ZMSHIFT,zmshift,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_zmshift,DZMSHIFT,dzmshift,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_zmshift(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 1;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, zmshift);
}

void C_zmshift(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 1;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, zmshift);
}

void f_pileup(const float* energy, int nFlux, const float* params,
	     int spectrumNumber, float* flux, float* fluxError);

FCALLSCSUB6(f_pileup,PILEUP,pileup,FLOATV,INT,FLOATV,INT,FLOATV,FLOATV)
FCALLSCSUB7(C_pileup,DPILEUP,dpileup,DOUBLEV,INT,DOUBLEV,INT,DOUBLEV,DOUBLEV,STRING)

void f_pileup(const float* energy, int nFlux, const float* params,
        int spectrumNumber, float* flux, float* fluxError)
{
   const size_t nPar = 7;
   fcppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        nPar, pileup);
}

void C_pileup(const double* energy, int nFlux, const double* params,
        int spectrumNumber, double* flux, double* fluxError, const char* initStr)
{
   const size_t nPar = 7;
   cppModelWrapper(energy, nFlux, params, spectrumNumber, flux, fluxError,
        initStr, nPar, pileup);
}

