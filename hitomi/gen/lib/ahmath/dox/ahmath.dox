/**
\defgroup mod_ahmath Math Library (ahmath)
@ingroup mod_gen_lib

The ahmath library performs general mathematical operations:
 - normal interpolation: nearest- and two-point methods
 - sawtooth interpolation
 - manipulation of tabulated functions
 - profile fitting

\section mod_ahmath_normal_interpolation Normal interpolation

The interpolation routines were designed around the case where you have two
vectors containing known X & Y data and you wish to interpolate at some point
not represented on either the X- or Y-mesh.  To interpolate, two ahmath calls
are needed:
 -# search(): to search the vector for the nearest points surrounding the
               point where interpolation will occur.
 -# interpolate(): interpolate the value by giving the X & Y vectors and the
                    resulting index from the search

\section mod_ahmath_sawtooth_interpolation  Sawtooth interpolation

Sawtooth functions are like normal X & Y vectors, except that the Y values will
reset to zero after reaching a known maximum value.  The approach for 
interpolating these functions is similar as with true functions, but care must 
be taken near the regions where the vector values reset to zero. There are two
search functions depending on whether you know the X or Y value: search_sawX2Y()
or search_sawY2X().  The two matching interpolation routines are
interpolate_sawX2Y() and interpolate_sawY2X().

\section mod_ahmath_tabulated  Manipulation of tabulated functions

There are a couple, general functions to assist in the profile fitting described
below.  These routines can be useful for other applications, however.

 - calcFirstDerivative(): calculate 1st derivative using the 3-point method; 
                    proper end-point formulas are used to maintain precision
 - shiftData(): shift a function, Y(X), by arbitrary Delta-X, but use 
              interpolation to keep original X mesh
 - convolveWithGaussian(): convolve function with a Gaussian having the given
                           width

\section mod_ahmath_profile_fitting  Profile fitting

Given a theoretical profile, f(x), these routines will use the least squares
method with three parameters to fit the profile to data.  The fitted profile
takes the form: g(x) = a*f(x+dx)+b, where a, b, and dx are parameters 
representing a scale factor, background, and shift.  The least squares method
only needs to search on dx as the other two parameters can be determined 
analytically.  The function to use is fitProfile().


*/
