.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xpa n"
.TH xpa n "July 23, 2013" "version 2.1.15" "SAORD Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fB\s-1XPA:\s0 Public Access to Data and Algorithms\fR
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
This document is the Table of Contents for \s-1XPA\s0.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The \s-1XPA\s0 messaging system provides seamless communication between many
kinds of Unix programs, including X programs and Tcl/Tk programs.  It
also provides an easy way for users to communicate with XPA-enabled
programs by executing \s-1XPA\s0 client commands in the shell or by utilizing
such commands in scripts.  Because \s-1XPA\s0 works both at the programming
level and the shell level, it is a powerful tool for unifying any
analysis environment: users and programmers have great flexibility in
choosing the best level or levels at which to access \s-1XPA\s0 services, and
client access can be extended or modified easily at any time.
.PP
A program becomes an XPA-enabled server by defining named points of
public access through which data and commands can be exchanged with
other client programs (and users).  Using standard \s-1TCP\s0 sockets as a
transport mechanism, \s-1XPA\s0 supports both single-point and broadcast
messaging to and from these servers.  It supports direct communication
between clients and servers, or indirect communication via an
intermediate message bus emulation program. Host-based access control
is implemented, as is as the ability to communicate with \s-1XPA\s0 servers
across a network.
.PP
\&\s-1XPA\s0 implements a layered interface that is designed to be useful both
to software developers and to users.  The interface consists of a
library of \s-1XPA\s0 client and server routines for use in C/\*(C+ programs and
a suite of high-level user programs built on top of these libraries.
Using the \s-1XPA\s0 library, access points can be added to Tcl/Tk programs,
Xt programs, or to Unix programs that use the \s-1XPA\s0 event loop or any
event loop based on \fIselect()\fR.  Client access subroutines can be added
to any Tcl/Tk, Xt, or Unix program. Client access also is supported at
the command line via a suite of high-level programs.
.PP
Choose from the following topics:
.IP "\(bu" 4
Introduction to \s-1XPA\s0
[xpaintro(n)]
.IP "\(bu" 4
Access Point Names and Templates
[xpatemplate(n)]
.IP "\(bu" 4
Getting Common Information About Access Points
[xpacommon(n)]
.IP "\(bu" 4
Communication Methods
[xpamethod(n)]
.IP "\(bu" 4
Communication Between Hosts
[xpainet(n)]
.IP "\(bu" 4
Distinguishing Users
[xpausers(n)]
.IP "\(bu" 4
\&\s-1XPA\s0 User Programs
.RS 4
.IP "\(bu" 4
xpaget: get data and info
[\fIxpaget\fR\|(1)]
.IP "\(bu" 4
xpaset: send data and info
[\fIxpaset\fR\|(1)]
.IP "\(bu" 4
xpainfo: send info alert
[\fIxpainfo\fR\|(1)]
.IP "\(bu" 4
xpaaccess: get access point info
[\fIxpaaccess\fR\|(1)]
.IP "\(bu" 4
xpamb: message bus emulation
[\fIxpamb\fR\|(1)]
.IP "\(bu" 4
xpans: the \s-1XPA\s0 name server
[\fIxpans\fR\|(1)]
.RE
.RS 4
.RE
.IP "\(bu" 4
\&\s-1XPA\s0 Server Routines
.RS 4
.IP "\(bu" 4
XPANew: define a new access point
[\fIxpanew\fR\|(3)]
.IP "\(bu" 4
XPACmdNew: define a new command access point
[\fIxpacmdnew\fR\|(3)]
.IP "\(bu" 4
XPACmdAdd: add a command
[\fIxpacmdadd\fR\|(3)]
.IP "\(bu" 4
XPACmdDel: delete a command
[\fIxpacmddel\fR\|(3)]
.IP "\(bu" 4
XPAInfoNew: define an info access point
[\fIxpainfonew\fR\|(3)]
.IP "\(bu" 4
XPAFree: free an access point
[\fIxpafree\fR\|(3)]
.IP "\(bu" 4
XPAMainLoop: event loop for select server
[\fIxpamainloop\fR\|(3)]
.IP "\(bu" 4
XPAPoll: poll for \s-1XPA\s0 events
[\fIxpapoll\fR\|(3)]
.IP "\(bu" 4
XPACleanup: release reserved \s-1XPA\s0 memory
[\fIxpacleanup\fR\|(3)]
.IP "\(bu" 4
\&\s-1XPA\s0 Server Macros: accessing structure internals
[\fIxpamacros\fR\|(3)]
.IP "\(bu" 4
\&\s-1XPA\s0 Race Conditions: how to avoid them
[\fIxparace\fR\|(3)]
.IP "\(bu" 4
\&\s-1XPA\s0 Out of Memory (\s-1OOM\s0) errors
[\fIxpaoom\fR\|(3)]
.RE
.RS 4
.RE
.IP "\(bu" 4
\&\s-1XPA\s0 Client Routines
.RS 4
.IP "\(bu" 4
XPAOpen: open a persistent client connection
[\fIxpaopen\fR\|(3)]
.IP "\(bu" 4
XPAClose: close persistent client connection
[\fIxpaclose\fR\|(3)]
.IP "\(bu" 4
XPAGet: get data
[\fIxpaget\fR\|(3)]
.IP "\(bu" 4
XPASet: send data or commands
[\fIxpaset\fR\|(3)]
.IP "\(bu" 4
XPAInfo: send an info alert
[\fIxpainfo\fR\|(3)]
.IP "\(bu" 4
XPAGetFd: get data and write to an fd
[\fIxpagetfd\fR\|(3)]
.IP "\(bu" 4
XPASetFd: read data from and fd and send
[\fIxpasetfd\fR\|(3)]
.IP "\(bu" 4
XPANSLookup: look up an access point
[\fIxpanslookup\fR\|(3)]
.IP "\(bu" 4
XPAAccess: get access info
[\fIxpaaccess\fR\|(3)]
.IP "\(bu" 4
The XPA/Xt Interface: Xt interface to \s-1XPA\s0
[xpaxt(n)]
.IP "\(bu" 4
The XPA/Tcl Interface: Tcl interface to \s-1XPA\s0
[xpatcl(n)]
.RE
.RS 4
.RE
.IP "\(bu" 4
Tailoring the \s-1XPA\s0 Environment
.RS 4
.IP "\(bu" 4
Environment Variables
[xpaenv(n)]
.IP "\(bu" 4
Access Control
[xpaacl(n)]
.RE
.RS 4
.RE
.IP "\(bu" 4
Miscellaneous
.RS 4
.IP "\(bu" 4
Where to Find Example/Test Code
.IP "\(bu" 4
User Changes Between \s-1XPA\s0 1.0 and 2.0
.IP "\(bu" 4
\&\s-1API\s0 Changes Between \s-1XPA\s0 1.0 and 2.0
.IP "\(bu" 4
What Does \s-1XPA\s0 Stand For, Anyway?
.RE
.RS 4
.RE
