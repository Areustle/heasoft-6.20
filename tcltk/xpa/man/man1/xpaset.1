.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.13)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "xpaset 1"
.TH xpaset 1 "July 23, 2013" "version 2.1.15" "SAORD Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
\&\fBxpaset: send data to one or more \s-1XPA\s0 servers\fR
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
<data> | xpaset  [\-h] [\-i nsinet] [\-m method] [\-n] [\-p] [\-s] [\-t sval,lval] [\-u users] [\-v] <template|host:port> [paramlist]
.SH "OPTIONS"
.IX Header "OPTIONS"
.Vb 10
\&  \-h            print help message
\&  \-i            access XPA point on different machine (override XPA_NSINET)
\&  \-m            override XPA_METHOD environment variable
\&  \-n            don\*(Aqt wait for the status message after server completes
\&  \-p            don\*(Aqt read (or send) buf data from stdin
\&  \-s            enter server mode
\&  \-t [s,l]      set short and long timeouts (override XPA_[SHORT,LONG]_TIMEOUT)
\&  \-u [users]    XPA points can be from specified users (override XPA_NSUSERS)
\&  \-v            verify message to stdout
\&  \-\-version     display version and exit
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Data read from stdin will be sent to access points matching the 
template
or host:port.
A set of qualifying parameters can be appended.
.PP
Normally, xpaset reads data input from stdin until \s-1EOF\s0 and sends those
data to the \s-1XPA\s0 target, along with parameters entered on the command
line. For example to send a \s-1FITS\s0 file to the ds9 image display:
.PP
.Vb 1
\&  cat foo.fits | xpaset ds9 fits
.Ve
.PP
Sometimes, however, it is desirable to send only parameters to an \s-1XPA\s0
access point, without sending data. For such cases, use the \-p switch to
indicate that there is no data being send to stdin. For example, to
change the colormap used by the ds9 image display program, use:
.PP
.Vb 1
\&  csh> xpaset \-p ds9 cmap Heat
.Ve
.PP
Of course, this also can be accomplished by sending \s-1EOF\s0 to stdin in
any of the usual ways:
.PP
.Vb 4
\&  csh> echo "" | xpaset ds9 cmap Heat
\&  csh> xpaget ds9 cmap Heat < /dev/null
\&  csh> xpaset ds9 cmap Heat
\&  ^D                    # Ctl\-D signals EOF
.Ve
.PP
The \-s switch puts xpaset into server mode, in which commands and data
can be sent to access points without having to run xpaset multiple times.
(Its not clear if this buys you much!) The syntax for sending commands
in server mode is:
.PP
.Vb 8
\&  csh> xpaset \-s
\&  xpaset ds9 colormap I8
\&  ^D
\&  xpaset ds9 regions
\&  circle 200 300 40
\&  circle 300 400 50
\&  ^D
\&etc.
.Ve
.PP
After the  required \*(L"xpaset\*(R" command is specified, optional \s-1ASCII\s0 data
can be appended (as in the region example).  A single data/command set is
delimited by ^D. Note that typing ^D when a command is expected terminates
the program.
.PP
\&\s-1NB:\s0 server mode only works from the terminal and only \s-1ASCII\s0 data can be
sent in this way.
.PP
\&\fBExamples:\fR
.PP
.Vb 2
\&  csh> xpaset ds9 file < foo.fits
\&  csh> echo "stop" | xpaset myhost:12345
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
See xpa(n) for a list of \s-1XPA\s0 help pages
