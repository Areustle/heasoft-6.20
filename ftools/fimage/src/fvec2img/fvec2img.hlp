.help fvec2img Jan95 ftools.fimage
.ih
NAME
fvec2img - Create an image from a column of vectors
.ih
USAGE
fvec2img infile outfile rows xname vector error tstart tdelta gapfill
.ih
DESCRIPTION
This task takes a column of vectors and creates an image.  The values
can either be contiguous based on row, or spaced according to an X
values, usually TIME.
.ih
PARAMETERS
.le
.ls infile [filename]
The name and extension of the FITS file containing the input vector.
Multiple files can be specified by entering them in a file, one per
line, and setting infile=@filename.
.le
.ls outfile [filename]
The name of the output file to contain the image.  If preceded by a
!, an existing file of the same name will be overwritten.
.le
.ls rows [string]
The row range corresponding to each input file.  If only one row range
is specified, it is applied to all input files.  The only way to
specify multiple row ranges is to put them in a file, one per line,
and set rows=@filename.
.le
.ls xname = TIME [string]
The name of the input X column to use for spacing the vectors into an
image.  No spacing is done if xname is blank, '-' or NONE or if
gapfill is true.
.le
.ls vector [string]
The name of the column containing the vector to be put into the image.
.le
.ls error = NONE [string]
The name of the column to use to construct a 2nd error image.  If
blank, '-' or NONE, no error image is created.
.le
.ls tstart [string]
The X (time) to start the image.  This parameter can be a value (real
number) in the same units as the XNAME column, a keyword name or
blank.  If blank, the tstart value is taken to be the first value of
the XNAME column.
.le
.ls tdelta [string]
The spacing between X (time) values in the image.  This parameter can
be a value (real number) in the same units as the XNAME column, a
keyword name or blank.  If blank, the tdelta is the difference between
the first 2 XNAME column values.  Ignored for gapfill=yes.
.le
.ls gapfill = yes [boolean]
Whether to fill in gaps in X (time).
.le
.ls (maxrows = 1024) [integer]
The maximum size of the array in the X (time) dimension.  Use this
parameter as a check on the dynamic allocation of the space needed for
the image.  It can be varied to take into account the memory
resources of the platform being used.
.le
.ls (datatype = " ") [string]
The datatype (or bits/pixel) of the output image.  If blank or "-", 
an integer image will be created.
Acceptable inputs are (b,8), (i,short,16), (j,integer,int,long,32),
(r,f,e,real,float,-32) and (d,double,-64).
.le
.ls (scale = yes) [boolean]
Whether to scale the output image.  If false, no scaling is done,
regardless of the values of the bzero and bscale parameters.  If true,
the output image will be scaled based on the values of bzero and
bscale.  Note that SAOIMAGE does not read the scaling keywords, so it
will display the values after scaling.  The default scaling is 256
equally spaced values.  If the image is integer, the scaling is done
so that no quantization errors are made.
.le
.ls (bzero = 0.) [double]
The value to use for the scaling offset (BZERO keyword).  If equal to
INDEF, bzero will be taken to be the minimum value in the image, not
counting 0.
.le
.ls (bscale = INDEF) [double]
The value to use for the scaling factor (BSCALE keyword).  If equal to
INDEF, bscale is calculated so that the data is spread into 256 bins.
For integer output images, the values are truncated, so that
quantization errors may enter unless an integer bscale is used.
.le
.ls (copyprime = yes) [boolean]
Whether to copy keywords from the primary array of the first input
file.
.le
.ls (copyall = yes) [boolean]
Whether to copy all of the data used into extensions of the output
file.  The data from each requested input file is copied to a separate
extension of the output file.
.le
.ls (sensecase = no) [boolean]
Whether to be case sensitive about column names.
.le
.ls (clobber = yes) [boolean]
If true, an existing output file will be overwritten.
.le
.ls (tchat = 10) [integer]
Terminal chattiness value.
.le
.ls (lchat = 0) [integer]
Log file chattiness level.  To initialize logging, set the environment
variable FLOGFILE to be the name of the file to contain the logging.
Add a + in the from to append information from each FTOOL.
.le
.ih
EXAMPLES 
.nf
1.  Create an image from the 1st 256 rows of file.fits, where PHAS is
    a vector column, TIME is the TIME.  Take the start time as the 
    1st value of TIME and use the keyword TIMEDEL to determine the
    step in X.  Do not fill in gaps in TIME, and scale the data to
    256 different levels starting at 0. Create the image as a 4 byte 
    integer.  (Enter as one line).  

    ft> fvec2img file.fits out.fits 1-256 TIME PHAS NONE - TIMEDEL no
           scale=yes bzero=0. datatype=j

.fi
.ih
BUGS
.le
TDELTA is ignored for GAPFILL=yes.
.ih
SEE ALSO
.endhelp
