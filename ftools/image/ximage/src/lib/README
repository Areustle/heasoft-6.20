      SUBROUTINE calimgpix(szx, szy, zmx, zmy, xcen, ycen, xpix, ypix, 
     &                  ximg, yimg, mode)
c
c actual calculation to convert pixel coords from the image array to the 
c original detector array and vice versa
c
c   I   szx      i   image size in x
c   I   szy      i   image size in y
c   I   zmx      i   image zoom in x
c   I   zmy      i   image zoom in y
c   I   xcen     d   image center in x
c   I   ycen     d   image center in y
c  I/O  xpix     r   x detector pixel return in mode 1
c  I/O  ypix     r   y detectot pixel
c  I/O  ximg     r   x image pixels  return in mode 2
c  I/O  yimg     r   y image pixels
c  I    mode     i   mode 1=img to detector 2=det 2img
c
-----------------------
      subroutine cnv_radec (str_ra, str_dec, deg_ra, deg_dec,
     &                      ary_ra, ary_dec, mode, status)
c
c  Mode determines input format of RA/Dec.  This routine converts
c  the input format into the other two formats.
c
c  I/O  str_ra  (c)  RA in string format
c  I/O  str_dec (c)  Dec in string format
c  I/O  deg_ra  (d)  RA in decimal degrees
c  I/O  deg_dec (d)  Dec in decimal degress
c  I/O  ary_ra  (r)  RA in hr, min, sec array
c  I/O  ary_dec (r)  Dec in deg, min, sec, array
c   I   mode    (i)  Mode of conversion (1=str_* as input,
c                    2=deg_* as input, 3=ary_* as input)
c   O   status    (i)  Error flag (0=OK)
c
-----------------------
      SUBROUTINE DEC_TO_EXP(Value,Mm,Pp,Sig)
c
c calculates mm and pp where:
c mm*10**pp ~ value and
c sig is the minimum number of significant digits to be savedin mm
c
c  Values are used by PGNUMB to create plottable string from number
c
-----------------------
      function detidx (satname, detname)
c
c Function to match input satname, detname with the
C common zsatellites and zdetectors arrays from info files
c The index of the match is returned.  
C -2 if unmatched.
c
c I  satname  c  satellite  
c I  detname  c  detector
c      
-----------------------
      SUBROUTINE DISRO(Pixpro,N,Np,Npix,Seed)
C
C     inputs:
C     pixpro (i) probability that a photon will go in pixel i
C     n total # of photons to be distributed
C     np # of pixels where photons have to be distributed
C     output:
C     npix (i) # of photons in pixel i
C
-----------------------
      SUBROUTINE DRWBOX(X1,X2,Y1,Y2)
c 
c Draws a box at SCREEN coords x1,x2,y1,y2
c
c I X1   (r) min x lower left
c I X2   (r) max x upper 
c I Y1   (r) min y lower 
c I Y2   (r) max y upper 
-------------------------------
      SUBROUTINE DRWCIR(X,Y,R)
c
c Draws a circle at SCREEN coords x,y with radius r
c 
c I  x   r  x pixel in display coordinates
c I  y   r  y pixel in display coordinates
c I  r   r  radius in display coordinates
c 
-------------------------------
      function edetidx (Telescop, Instrume, Detnam)
c
c Function to EXACTLY match input telescop, instrume with the
C common zsatellites and zdetectors arrays from info files
c The index of the match is returned.  
C -2 if unmatched.
c
c  Used for adding new missions on the fly.  Don't want specific
c  TELESCOP/INSTRUME/DETNAM to match generic TELESCOP/INSTRUME
c  and prevent adding specific detector.
c
c  I  telescop  c  Telescope  
c  I  instrume  c  Instrument
c  I  detnam    c  Detector name
c      
-------------------------------
      subroutine findchr (str, ibeg, iend, chrlist, iloc, ch, status)
c
c  Find first occurence of character in chrlist beginning at
c  ibeg in str.
c
c  I  str     (s)  Input string
c  I  ibeg    (i)  Start index
c  I  iend    (i)  Stop index
c  I  chrlist (s)  String where each character is to be searched for
c  O  iloc    (i)  Location of found character
c  O  ch      (c)  Character found
c  O  status  (i)  Error flag (0=OK)
c
-----------------------
      subroutine get_color(color)
c
c  When XIMAGE was freed from its 16 color standard, a new
c  problem cropped up.  Throughout the code, there are places
c  where certain plotted elements are given default colors.
c  With varying color ranges, these values no longer correspond
c  to the same color.  The current interpretation is that the 
c  the color value is normalized to 16.
c
c I/O color        (i) Input color value (0-16)
c                      Output color value (scaled over PGQCIR values)
-----------------------
      subroutine get_itel(mapid, itel)
c
c  Get telescope index for specified map
c
c  I  mapid  (c)  Header to retrieve from
c  O  itel   (i)  Telescope index
c
----------------------
      subroutine get_refram (Mapid,szx, szy,zmx,zmy, xcen,ycen,
     &                       status)
c
c Read internal header and convert ra dec roll north pixsize to degrees
c
c  I  MapID   (c)  Internal XIMAGE mapid
c  O  szx     (i)  array size x dimention
c  O  szy     (i)  array size in x dimention
c  O  zmx     (i)  zoom in x direction
c  O  zmy     (i)  zoom in y direction
c  O  xcen    (d)  x image center in ximage frame coordinates
c  O  ycen    (d)  y image center in ximage frame coordinates
c  O  Status  (i)  Error flag (0=OK)
c
-----------------------
      subroutine get_skyhea (Mapid,Ra,Dec,Rnorth,Roll,Pixsize,
     &                       imgequ, Ctype,status)
c
c Read internal header and convert ra dec roll north pixsize to degrees
c
c  I  MapID   (C)  Internal XIMAGE mapid
c  O  Ra      (d)  ra center in degrees
c  O  Dec     (d)  dec center in degrees
c  O  Rnorth  (d)  north image in degrees
c  O  Roll    (d)  roll image in degrees
c  O  Pixsize (d)  pixel size in degrees
c  O  imgequ  (i)  equinox as interger
c  O  Ctype   (c)  type of projection
c  O  Status  (i)  Error flag (0=OK)
c
-----------------------
      subroutine get_telstr(Mapid, Telstr)
c
c  Return telescope id string, TELESCOP INSTRUME DETNAM
c
c   I  mapid   (c)  Map id
c   O  telstr  (c)  Telescope/Instrume/Detnam string
c
-----------------------
      subroutine getdefs (no_of_levels, device, equinox, status)
      implicit none
c
c  Retrieves default values
c
c  O  no_of_levels (i) Number of color levels
c  O  device       (c) PGPLOT device
c  O  equinox      (i) XIMAGE equinox
c  O  status       (i) Error flag (0 = OK)
c
-----------------------
      subroutine get_optax(itel, xcen, ycen, xoff, yoff) 
c
c  Retrieve offset for specified mission
c
c  I  itel     (i)  Telescope index
c  I  x/ycen   (d)  Telescope center
c  O  x/yoff   (d)  Telescope optical axis
c
-----------------------
      SUBROUTINE GETSEED(Seed)
c
c get a seed number
c
c  initialize seed using current date and time
c
-----------------------
      SUBROUTINE imgpix(mapid, xpix, ypix, ximg, yimg, mode, status)
c
c subrotine to convert pixel coordintes from the image array to the
c original detector array and viceversa
c  I    Mapid    s   map type
c  I/O  xpix     r   x detector pixel
c  I/O  ypix     r   y detectot pixel
c  I/O  ximg     r   x image pixels
c  I/O  yimg     r   y image pixels
c  I    mode     i   mode 1=img to detector 2=det 2img
c  O    status   i   error return
c
-----------------------
      SUBROUTINE inxypix(Cursor,Xpix,Ypix)
c
c Input coordinate in original pixels from cursor or command line
c
c  I  cursor   (l)  if cursor required
c  O  xpix     (r)  value in original pixel coordinates
c  O  ypix     (r)  ypixel value in image array coordinates
c
-----------------------
      subroutine line_pgstate (Color, Width, Style)
c
c  Sets line properties based on qualifier values
c
c  I  Color  (i)  Color index
c  I  Width  (i)  Line width
c  I  Style  (c)  Line style
-----------------------
      subroutine lkupcal(Itel, Pattern, Filename, Status)
c
c Find calibration file. First try filename based on
c  detnam, then instrume
c
c  I  itel     (i) Telescope index
c  I  pattern  (s) File pattern, replace * with INSTRUME or DETNAME
c                                if no *, use as is
c  O  filename (s) Location of file
c  O  status   (i) Error flag (0=OK)
c
-----------------------
      subroutine matchkey (Value, Keys, Nkeys, Ipos, Status)
c
c  Matches value in set of keys
c
c  I  value  (c)  Entered value
c  I  keys   (c)  Array of possible values
c  I  nkeys  (i)  Number of possible values
c  O  ipos   (i)  Position of matching option
c I/O status (i)  Status flag ( 0 = OK )
-----------------------
      subroutine matchopts (Value, Opts, Nopts, Ipos, Status)
c
c  Matches value in set of options
c
c  I  value  (c)  Entered value
c  I  opts   (c)  Array of possible values
c  I  nopts  (i)  Number of possible values
c  O  ipos   (i)  Position of matching option
c I/O status (i)  Status flag ( 0 = OK )
-----------------------
      subroutine parseilst(strlist, delim, maxint, intary, numint, 
     &                      status)
c
c  Parse string containing list of integers and put into
c  array of integers
c
c  I  strlist   (s)  List of integers
c  I  delim     (c)  Character delimiting the integers
c  I  maxint    (i)  Maximum number of integers
c  O  intary    (i)  Array of integers
c  O  numint    (i)  Number of integers
c  O  status    (i)  Error flag (0=OK)
c
-----------------------
      subroutine prstart (version)
c
c  Prints startup message
c
c  I  version  (c)  Program version
c
-----------------------
      subroutine qustrip(String)
c
c  Strip start and end double or single quote from string
c
c   I/O  string   (s)  String
c
-----------------------
      SUBROUTINE rdtoxy(Rain,Decin,Szx,Szy,Racenter,
     &                  Deccenter,Roll,Pixelsize,Xpos,Ypos)
c
c For a given coordinates (rain and decin) returns image pixel
c given the reference ra, dec, roll and pixel size
c
c I  Rain      d   value of ra to convert in xpixel
c I  Decin     d   value of dec to convert in y pixel
c I  Szx       i   number of pixels X dimension
c I  Szy       i   number of pixels Y dimension
c I  RAcenter  d   ra of the reference pixel Xcenter
c I  Decencer  d   dec ofthe reference pixel Ycenter
c I  Roll      d   rotaton angle (ximage convension)
c I  pixelsize d   pixel size
c O  Xpos      r   pixel position
c O  Ypos      r   pixel position
c
-----------------------
      subroutine setdefs (no_of_levels, device, equinox, status)
c
c  Sets default values
c
c  I  no_of_levels (i) Number of color levels
c  I  device       (c) PGPLOT device
c  I  equinox      (i) XIMAGE equinox
c  I  status       (i) Error flag (0 = OK)
c
-----------------------
      subroutine srchpath (filename, ext, status)
c
c  Searches for filename in local directory, then distribution
c
      include '../include/sitedef.inc'
c
c I/O filename  (c) File
c  I  ext       (c) File extension
c
-----------------------
      SUBROUTINE STDQSORT(Sortcrit, Ndim, Nmax)
c
c  Aug 31, 1999 -- Modified from qsort_detect to leave out
c  NBROS array, containing original order information.
c
C modified from algol code to structured fortran,j.c.lewis
C see n.wirth 'algorithms+data structures=programs'
C -quicksort takes an element k (near the middle say),scans the array
C  from the left till an el. gt k is found,scans from the right till an
C  el. lt k is found,& swaps these 2 els.
C  this is continued till all els to left of k are lt k,and all to right
C  are gt k.
C  now do the same for these 'subpartitions'.when all subpartitions
C  are of length 1,array is sorted!!!!
C   use a stack array to keep track of partitions yet to be sorted-
C  always sort the smaller partition first
C  use stack size=log2(nmax)
C
c  this is a modification of paolos qsort.
c
c I/O sortcrit  (r)  Array containing values to be sorted on
c  I  ndim      (i)  Dimension of arrays
c  I  nmax      (i)  Number of elements in arrays
c
-----------------------
      subroutine streval(instr, varnames, varvals, numvar, outstr,
     &                   status)
c
c  Evaluate string, expanding variables denoted %variable% using
c  list of varnames
c
c  I  instr    (s)  String to evaluate
c  I  varnames (s)  List of variables names
c  I  varvals  (s)  List of variables values
c  I  numvar   (s)  Number of variables
c  O  outstr   (s)  Evaluated string
c  O  status   (i)  Error flag (0=OK)
c
-----------------------
      subroutine strjust(instr, just, outlen, outstr)
c
c  Justify string
c
c  I  instr   (s)  String to justify
c  I  just    (s)  Justification (center, left, right)
c  I  outlen  (i)  Length of output string
c  O  outstr  (s)  Justified string
c
-----------------------
      subroutine sym_pgstate (Color, Size, Width)
c
c  Sets symbol properties based on qualifier values
c
c  I  Color  (i)  Color index
c  I  Size   (r)  Character size
c  I  Width  (i)  Line width
c
-----------------------
      subroutine text_pgstate (Color, Size, Width, Font)
c
c  Sets text properties based on qualifier values
c
c  I  Color  (i)  Color index
c  I  Size   (r)  Character size
c  I  Width  (i)  Line width
c  I  Font   (c)  Font
c
-----------------------
     SUBROUTINE write_radec(Ra, Dec, Equinox)
c
c  writes input ra/dec (degrees) in hr min sec, and deg min sec format
c  and tranform and write the galactic coordintes
c  I  Ra       d Rt. Asc. in degrees
c  I  Dec      d Declination in degrees
c  I  Equinox  i equinox of coordinates
c
-----------------------
      subroutine xdstr(value, sigdig, str, len)
c
c  Return format based on input value
c
c  I  value  (d)  Double value
c  I  sigdig (i)  Significant digits to print
c  O  str    (c)  String
c  O  len    (i)  Length of string
c
-----------------------
      subroutine xidate (idat)
      integer idat(3)
c
c  O  idat  (i) Integer array of current date
c
c xidate uses the XANLIB routine GETDAT to return the
c current date in an integer array
c
-----------------------
      subroutine xim_startup(Status)
c
c  XIMAGE startup process 
c  Fills mission info and color table arrays
c
c  O  status       (i) Error flag (0=OK)
c
-----------------------
      subroutine ximprec (ra, dec, equ1, equ2)
c
c  Wrapper to simplify calls to precess sky coordinates
c
c I/O ra,dec (d)  Sky coordinates
c  I  equ1   (i)  Input equinox
c  I  equ2   (i)  Output equinox
-----------------------
      subroutine xistr(value, str, len)
c
c  Return string representing integer
c
c  I  value  (i)  Integer value
c  O  str    (c)  String
c  O  len    (i)  Length of string
c
-----------------------
      SUBROUTINE XYTRD(Ex,Ey,Del,Ra,Dec,Ra0,Dec0,Theta,Oldang,Newang)
c
c return ra and dec for a given x, y  pixel position
c I    EX,EY      (r)  LINEARIZED DETECTOR COORDS OF SOURCE
c I    DEL        (d)  SIZE OF 1 UNIT OF EX,EY (DEGREES)
c I    RA0,DEC0   (d)  RA,DEC (1950.0) OF EX=0,EY=0
c I    THETA      (d)  ORIENTATION ANGLE OF NORTH VECTOR (IN EX,EY FRAME)
c O    RA,DEC     (d)  RA,DEC (1950.0) OF SOURCE                          (O/P
c I/O  OLDANG     (r)  ANGLE OF MAJOR AXIS OF SOURCE TO EX AXIS
c I/O  NEWANG     (r)  POSITION ANGLE OF MAJOR AXIS TO LOCAL NORTH VECTOR (O/P
c     
c oldang and newang    dummy varaibles
c ex ey and del are the pixel values of the reference pixel
c in image coodinates and increment pixels size in degrees
c ra0 and dec0 are the value of the reference pixel
c ra and dec is the output
c theta is the roll
-----------------------
      SUBROUTINE yread(x, y)
c
c reads position from mouse using PGPLOT routine PGCURSE
c if the device has no mouse or the mouse position cant be
c read, YREAD stops. No need for error return because
c call should be made only if cursor is available
c
c O X       r   X cursor position
c O Y       r   Y cursor position
-----------------------
      subroutine lkupfile(filename, ext, desc, status)
c
c find file in ximage installation area (e.g. header template files)
c
c I/O filename (s) Location of file
c  I  ext      (s) File extension
c  I  desc     (s) File description
c  O  status   (i) Error flag (0=OK)
c
