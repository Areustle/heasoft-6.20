 
Need to add to README:
exdeltmp.f
exmjd.f
exmovleft.f
exrdwin.f
exremcom.f
extract.f
ezregplot.f
fingti.f
getevents.f
getgti.f
select_phase.f
select_time.f
sort_time.f
w_pha.f
write_qdp.f
----------------------------
      SUBROUTINE boxreg(status)
c get the box region
c I Status   (i)  status error
c
----------------------------
      SUBROUTINE circlereg(status)
c get the circle region
c I Status   (i)  status error
c

----------------------------
      SUBROUTINE EXASK(Cpro,Cque,Lur,Lut,Lcd,Lul,Luw,Cinput,Cv,Iv,Rv,Dv,
     &                 Ity,No,*,*)
c
c ls 25/2/88 general purpose routine for reading/writing a parameter
c            in an interactive program
c ls 6/4/88  upgraded to decode more than 1 param. in input string
c ls 6/7/88  no=-1 option added (rev.2)
c ls 27/9/88 to cure problem in integers followed by 1 space (rev.3)
c ls 8/2/89  temporary variables ivt,rvt,dvt introduced to avoid reset of in
c            default case of error in input string (rev.4)
c ls 16/12/89 remove comments following "!" from string and cure problem with
c             1 chars first replies starting with blanks (Rev.5)
c ls 16/12/89 to allow reading again from command file after an error in
c             command file and a correct reply from terminal (rev.6)
c
c      I   cpro = promtpt issued
c      I   cque = question asked
c      I   lur,lut,lul = logical units of read, terminal,
c                        logfile (write to lul only if >0)
c      I   lcd = cd_xronos chattiness (use 10 for other uses)
c      I   luw = logical unit to write cmd file (if luw.ne.0 and EOF
c                is read from input string luw is closed)
c      R   cinput = string containing all replies
c      R   cv,iv,rv,dv = char,int*4,real*4,real*8 parameter to be read
c      I   ity =           1 ,  2  ,   3  ,   4   parameter type
c      I   no  = No. of parameter in string
c                (if =1 question is asked, if=-1 question is not asked)
c
c      R   * =  Conditional return 1 is to ask question again when there is
c               an input error and no>1 (to go to statement where xrask
c               is called with no=1).
c      R   * =  Conditional return 2 is to stop asking for a given param.
c               when entering a character '-' (in other cases it can be
c               considered a return for defualt)
c
c   (xrhelps(/help)),xgthlp, xrbell = subroutines used
c
c   Input String: 132 chars. at max., if no chars are read the relevant
c                 variable is unchanged (to have defaults). If more than
c                 one param. is contained in the string the subroutine should
c                 be called once for each parameter by setting no=1,2,3, etc
c                 for the first, second, third param. etc. The question is
c                 asked only if no=1. Parameters should be asked in the
c                 same order of the input string. No params can be skipped
c                 (no=-1 is to decode first varaible without asking question)
c
c   EOF in input string: if from terminal closes all units and stops
c                        if from command files transfer control to term.
c                        (EOF is cntlD in unix and cntlZ in VMS)
c
c   Question + Prompt String: contains 39 chars at max; if this is not
c                             enough use the xraskl routine which writes
c                             a longer question.
c
----------------------------
c     SUBROUTINE getregions(regtype, status)
c
c
c This routine work for the circle and box command
c The boxreg and the circlereg have been combined in one
c since the code is the same.
c I  regtype  (i)  1= circle 2=box
c O  Status   (i)  status error

------------------------------
      SUBROUTINE PLOT_REGION(Rt,Nrt,maxreg,Points,Npoints,Maxpoints,
     &                        Color, Width, Style, Excolor,
     &                       Exwidth, Exstyle)
c
c Plot the region
c I   Rt        (i) is the index into points for each reagion
c I   nrt       (i) number of regions found
c I   maxreg    (i) maximum number of regions allowed (set in expar.inc)
c I   points    (d) store all the important points for each region
c I   npoints   (i) never used
c I   maxpoints (i) maximum size of the points array
c I   color     (i) color to plot the including box
c I   width     (i) width for the including box
c I   style     (i) style for the including box
c I   excolor   (i) color to plot the EXincluding box
c I   exwidth   (i) width for the EXincluding box
c I   exstyle   (i) style for the EXincluding box
------------------------------
     SUBROUTINE READ_REGION(File,Rt,Nrt,maxreg,Points,Npoints,
     &                       Maxpoints)
c
c I file      (c)  region file
c I Rt        (i)  array that index points for each reagion
c O nrt       (i)  number of regions found in the file
c I maxreg    (i)  maximum number of regions to process
c O points    (i)  an array of all the important points for each region
c O npoints   (i)  is a counter for the points array
c I maxpoints (i)  the maximum number of points to store
c
------------------------------
     SUBROUTINE SELECT_INTEN(File,Pha,Ok)
c
c Select intensity not implemented
c
------------------------------
      SUBROUTINE SELECT_REGDMP(Region,Maxregsize)
c
c Dump the work array in a temporay fits file In the calling routine
c found problems in calculating the edges
c I Region      (i)  Bit map array
c I Maxregsize  (i)  Size of Bit map array
c
------------------------------
      SUBROUTINE SELECT_REGION(File,filesave,
     &                         X1,Y1,Area,Ok,Bb,Xsize,Ysize,Region,
     &                         Izoom,Xoff,Yoff)
c
c The first time in read the region file and construct a bit map for the
c final array stored in region. The second time (file=filesave) just check that
c the pixel value is an included or excluded pixel.
c
c  I   File     (c)  region file name to load, if ' ' then reset file
c                    name and return
c  I   Filesave (c)  used to save the filefile name
c  I   x1       (i)  coordinates in the final array (work array).
c  I   y1       (i)  coordinates in the final array (work array)
c  O   area     (r)  Total Area in all the regions
c  I/O ok       (l)  TRUE if it came in TRUE and x1 and y1 are in the region
c  O   bb       (d)  Bounding Box: bb(1)=xmin, bb(2)=xmax, bb(3)= ymin,
c                    bb(4)= ymax
c  I   xsize    (i)  X maximum size of the image
c  I   ysize    (i)  Y maximum size of the image
c  I   region   (i)  Work array that is output with 0=included  1=excluded
c  I   izoom    (i)  zoom for the image array over that in the region
c  I   xoff     (i)  offset of the image in unzoomed detector coords
c  I   yoff     (i)  offset of the image in unzoomed detector coords
------------------------------
      SUBROUTINE SELREG_BOUNDS(Stack,Stacksize,Sp,Region,Maxregsize)
c
c Check overflow for Stack array
c
c  I Stack        (i)
c  I Stacksize    (i)   size of the stack array
c  I Sp           (i)
c  I Region       (i)   work array for bit mask
c  I maxregsize   (i)   size of the bit mask
c
------------------------------

      FUNCTION SELREG_ISEMP(Stack,Stacksize,Sp,Region,Maxregsize)
c
c Check for bounds  True if within inside, else false
c  I Stack         (i)
c  I Stacksize     (i)   size of the stack array
c  I Sp            (i)
c  I Region        (i)   work array for bit mask
c  I maxregsize    (i)   size of the bit mask
c
------------------------------
      SUBROUTINE SELREG_POP(X,Y,Stack,Stacksize,Sp,Region,Maxregsize)
c
c Get X and Y value from stack
c
c  O X            (i)   X value of point to test if in or out
c  O Y            (i)   Y value of point to test if in or out
c  I Stack        (i)
c  I Stacksize    (i)   size of the stack array
c  I Sp           (i)
c  I Region       (i)   work array for bit mask
c  I maxregsize   (i)   size of the bit mask
c
------------------------------
      SUBROUTINE SELREG_PUSH(X,Y,Stack,Stacksize,Sp,Region,Maxregsize)
c
c Put X and Y in the stack array
c
c  I X            (i)   X value of point to test if in or out
c  I Y            (i)   Y value of point to test if in or out
c  O Stack        (i)
c  I Stacksize    (i)   size of the stack array
c  I Sp           (i)
c  I Region       (i)   work array for bit mask
c  I maxregsize   (i)   size of the bit mask
------------------------------

      SUBROUTINE SELREGBRES(X1,Y1,X2,Y2,Region,Maxregsize,Value)
c
c Bresenham's line drawing algorithm
c
c I X1          (i)  x first point
c I Y1          (i)  y first point
c I X2          (i)  x second point
c I Y2          (i)  y second point
c I Region      (i)  Bit map
c I Maxregsize  (i)  size of the bitmap
c I Value       (i)  bit map value
c
------------------------------

      SUBROUTINE SELREGDRAW(Polygon,Maxpolygon,Ipoly,Rot1,Region,
     &                      Maxreg1,Value,Xc,Yc,Maxregsize)
c
c  I Polygon      (r)   depending on the region stored the points
c                       that defined the region
c  I Maxpolygon   (i)   max number of regions ??
c  I Ipoly        (i)   number of edges varies with the region
c  I rot1         (d)   If rotation angle in given in region
c  I Region       (i)   work array for bit mask
c  I Maxreg1      (i)   size of the region array
c  I value        (i)   value for the bitmask 0=included 1=excluded
c  I Xc           (d)   X value for the first point
c  I Yc           (d)   Y value for the first point
c  I maxregsize   (i)   in the calling = Maxreg1
------------------------------
      FUNCTION SELREGIN(X1,Y1,Region,Maxregsize)
c
c True if inside, else false
c  I X1            (i)   X value of point to test if in or out
c  I Y1            (i)   Y value of point to test if in or out
c  I Region        (i)   work array for bit mask
c  I maxregsize    (i)   size of the bit mask
c 
------------------------------
      subroutine wrcolor(filecolor, device, telescope, instrument,
     &                   field, chan, ratio, chi, mode, status)
c
c Write color-color diagram
c
c  I  filecolor   (s)  Output file
c  I  device      (s)  PGPLOT device
c  I  telescope   (s)  Telescope name
c  I  instrument  (s)  Instrument name
c  I  field       (s)  Observation description
c  I  chan        (i)  Energy channels
c  I  ratio       (i)  Channel ratios
c  I  chi         (r)  Chi-square
c  I  mode        (l)  0=Standard format 1=Extended format(SAX)
c  O  status      (i)  Error flag (0=OK)
c
------------------------------
