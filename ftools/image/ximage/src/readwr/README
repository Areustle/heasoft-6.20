      subroutine exoifil(Filter, Ifil, Mode)
c
c  Translate between EXOSAT filter name and index
c
c  I/O  filter   (s)  Filter name
c  I/O  ifil     (i)  Filter index
c   I   mode     (i)  (1 = set filter from ifil)
c                     (2 = set ifil from filter) 
c
--------------------------------------------------------
        subroutine fcidxd(nrec,array,index)

C Required by gtilib.f
C
C Lifted from FTOOLS:  May 14, 1998
C
C DESCRIPTION:
C      Index a double array such that array(index(i)) 
C      is in ascending order
C
C ARGUMENTS:
C      nrec  - number of records
C      array - array of doubles
C      index - array for indexing
--------------------------------------------------------
      subroutine getcol(Lun, Colname, Icol, Status)
c
c  Retrieve column index
c
c  I  Lun     (i) Logical unit of open event file
c I/O Colname (c) Column name
c  O  Icol    (i) Column index
c  O  Status  (i) Error flag (0=OK)
c
--------------------------------------------------------
      subroutine getexohdr (Mapid, Header, Status)
      implicit none
c
c  Set integer*2 header for writing to exosat file
c
c  I  Mapid    (c)  Map to write
c  O  Header  (i*2) Exosat header
c  O  Status   (i)  Error flag (0 = OK)
c
--------------------------------------------------------
      subroutine go_evttbl(Lun, Extnum, Nrows, Status)
c
c  Searches fits file for event table, returns extension
c  number of event table and number of rows
c  Routine exits with CHDU set to event table
c
c  I  Lun    (i)  Logical unit of open FITS file
c I/O Extnum (i)  Extension number of event table
c  O  Nrows  (i)  Number of rows in event table
c  O  Status (i)  Error flag (0=OK)
c
--------------------------------------------------------
      subroutine gt_dcoor (Lun, Xi, Yi, Idet, Crpix, Cdelt,
     &                     Drpix, Ddelt)
c
c  Retrieve detector coordinates
c
c  I  Lun  (i)  Logical unit of open FITS file
c  I  Xi   (i)  X column or 1 for image
c  I  Yi   (i)  Y column or 2 for image
c  I  Idet (i)  Satellite/detector index
c  I  Crpix (d)  Reference pixel
c  I  Cdelt (d)  Pixel size
c  O  Drpix (d)  Detector center
c  O  Ddelt (d)  Detector pixel size
c
--------------------------------------------------------
      subroutine gt_fitstype (Filename,Filetype,Extnum,Status)

c Modified version of read_fits_ui
c
c This routine allows the user to type read/fits /whatever and have
c it pick the right type of fits file to read.
c
c It firsts looks to see if there is a primary array.  If so, it returns
c type 'IMG'.  Else it tries to find a binary table extension named
c events.  If it succeds then it returns type 'EVT'   Else, it
c gives a message and returns type ' '
c
c  I  Filename    (c)  Filename given by user may include extension
c  O  Filetype    (c)  'EVT' (event list), 
c                      'IMG' (image), or ' ' (unknown) 
c  O  Extnum      (i)  Extension number 
c  O  Status      (i)  Error flag  (0 = OK)
c
--------------------------------------------------------
      subroutine gt_gtis (Lun, Gtifile, Gtimode, T_min, T_max, 
     &                    Gtinum, P_gtistart, P_gtistop, Tontime)
c
c Nov. 12, 1998 -- Micah Johnson
c
c This routine distills user entered options, T_min, T_max, and
c Gtifile and event file's GTIs into a single list of GTIs, 
c represented as dynamically allocated start and stop arrays.  
c A Gtinum of 0 is returned if no such options have been set.
c
c  I  Lun        (c) Logical unit of open event file
c  I  Gtifile    (c) File containing list of GTIs
c  I  Gtimode    (c) Mode for merging GTIs (AND, OR, SUB)
c  I  T_min      (d) Minimum time
c  I  T_max      (d) Maximum time
c  O  Gtinum     (i) Number of output GTIs
c  O  P_gtistart (i) Pointer to first GTI start time
c  O  P_gtistop  (i) Pointer to first GTI stop time
c  O  Tontime    (d) Total ontime
c
--------------------------------------------------------
      subroutine gt_imgcen (Szx, Szy, Zmx, Zmy, Equimg, Crval, Drpix, 
     &                      Ddelt, Roll, North, Equinox, Uspix, Usval)
c
c  Determine image center from user and image coordinates
c
c  I  Szx     (i)  Image size in X
c  I  Szy     (i)  Image size in Y
c  I  Zmx     (i)  Zoom in X
c  I  Zmy     (i)  Zoom in Y
c  I  Equimg  (i)  Equinox of image
c  I  Crval   (d)  Sky coordinates of reference pixel
c I/O Drpix   (d)  Reference pixel in detector coords
c  I  Ddelt   (d)  Pixel size in detector coords
c  I  Roll    (d)  Roll angle
c  I  North   (d)  North angle
c  I  Equinox (i)  Equinox of Usval
c I/O Uspix   (d)  User-entered center
c I/O Usval   (d)  User-entered center in sky coordinates
c
--------------------------------------------------------
      subroutine gt_missinfo(Idet,Ecol,Min_E,Max_E,
     &                       Szx,Szy,Zmx,Zmy)
c
c  Set default energy column, image size, 
c  and zoom based on mission unless already set
c
c I/O Ecol      (c) Energy column
c I/O Min_E     (i) Minimum energy value
c I/O Max_E     (i) Maximum energy value
c I/O Szx       (i) Image size in x
c I/O Szy       (i) Image size in y
c I/O Zmx       (i) Image zoom in x
c I/O Zmy       (i) Image zoom in y
c
--------------------------------------------------------
      subroutine gt_skysz (Szx, Szy, Ctype, Zmx, Zmy, Ddelt)
c
c   User specified FOV
c
c I/O Szx      (i) Size of image in x (arcmin)
c I/O Szy      (i) Size of image in y (arcmin)
c  I  Ctype    (c) Coordinate system
c  I  Zmx      (i) Zoom factor in x direction
c  I  Zmy      (i) Zoom factor in y direction
c  I  Ddelt    (d) Pixel size in detector coords
c
--------------------------------------------------------
      subroutine gtialloc(mode, num, istart, istop, status)
c
c  Allocates memory for two double arrays, representing
c  GTI start and stop times
c
c  I  mode   (i)  1=Allocate, 0=Deallocate
c  I  num    (i)  Number of GTIs
c  O  istart (i)  Memory offset for allocated start time array
c  O  istop  (i)  Memory offset for allocated stop time array
c  O  status (i)  Error flag (0=OK)
c
--------------------------------------------------------
(gtilib.f)

      subroutine gtimerge (mode, gtistart, gtistop, ngti, mxgti,
     &    astart, astop, anum, bstart, bstop, bnum, status)

      subroutine gticlean( gtistart, gtistop, ngti, mxgti,
     &    astart, astop, anum, status )

      double precision function gtiexp( t1, t2, gtistart, gtistop,
     &    ngti, status )
C
C Lifted from FTOOLS:  May 14, 1998
C Replaced all instances of fcerr with XANLIB equivalents
C
C General routines for manipulating Good Time Interval (GTI) lists.
C Contents:
C     GTIMERGE: Merge two Good Time Interval lists.
C     GTICLEAN: Make sure a GTI list is ordered, and has no overlaps or
C         zero-length intervals
C     GTIEXP: Calculate what part of a given time interval is within the GTIs
C
--------------------------------------------------------
      subroutine matchext(lun,keys,numkeys,vals,numvals,hdunum,ierr)
c
c  Search open FITS file for HDU which contains keys with matching
c  value from vals.  keys and vals may contain wildcards.
c
c  I  lun     (i)  Input file lu
c  I  keys    (c)  Keyword search is based on these
c  I  numkeys (i)  Number of keyword candidates
c  I  vals    (c)  Possible matching values for keywords
c  I  numvals (i)  Number of value candidates
c  O  hdunum  (i)  Return the number for matched HDU
c                  If not find return -999.
c  O  ierr    (i)  Error flag (0=OK)
c
--------------------------------------------------------
      subroutine parsetmpl (line, type, keyword, hdrkey, comment)
c
c  Parses header template line
c
c  I  line    (c)  header template line
c  O  type    (c)  data type ( I = integer, D = double, S = string )
c  O  keyword (c)  keyword to print in file
c  O  hdrkey  (c)  key to lookup in header
c  O  comment (c)  comment
c
--------------------------------------------------------
      subroutine rd_ckeys (Lun, Xi, Yi, Naxes, Ctype, Crval, Crpix,
     &                     Cdelt, Roll, North)
c
c  Get coordinate information from C-kewords:
c  CTYPE1/2, CRVAL1/2 CRPIX1/2, CDELT1/2, CROTA2
c
c  I  Lun     (i)  Logical unit of open FITS file
c  I  Xi      (i)  Index for X coordinate (image = 1, event = X column)
c  I  Yi      (i)  Index for Y coordinate (image = 2, event = Y column)
c  I  Naxes   (i)  Image dimensions
c  O  Ctype   (c)  Coordinate system
c  O  Crval   (d)  Sky coordinates of reference pixel
c  O  Crpix   (d)  Reference pixel
c  O  Cdelt   (d)  Pixel size
c  O  Roll    (d)  Roll angle
c  O  North   (d)  North angle
c
--------------------------------------------------------
      subroutine rd_detkeys (Lun, Unknown, Telescop, Instrume, Filter, 
     &                       Idet, Ifil, Ierr)
C
C  Given a unit number for an open FITS file, reads and returns
c  keywords identifying the detector and filter:
C  TELESCOP, INSTRUME, FILTER
C
c   I   Lun      (i) Logical unit of open FITS file
c   I   Unknown  (l) If true, act as if keywords not found
c   O   Telescop (c) TELESCOP keyword
c   O   Instrume (c) INSTRUME keyword
c   O   Filter   (c) FILTER keyword
c   O   Idet     (i) Index for matching pair in Zdetectors and Zsatellite 
c   O   Ifil     (i) Index for matching filter (-2 unless cma1 or cma2)
c   O   Ierr     (i) Error flag (0=OK)
c      
--------------------------------------------------------
      subroutine rd_eqxkey(Lun,Equinox,Equimg,Ierr)
c
c  Reads equinox keyword. If does not exist, try epoch.
c    If not found, use XIMAGE equinox
c
c  I  Lun     (i)  Logical unit of open FITS file
c  I  Equinox (i)  XIMAGE Equinox
c  O  Equimg  (i)  Equinox read from FITS file
c  O  Ierr    (i)  Error flag (0=OK)
c
--------------------------------------------------------
      subroutine rd_evt_xim (Lun,Type,Map,Exmap,Work,Rmap,Szx,Szy,
     &                       Zmx,Zmy,Xi,Yi,Zi,Ei,Ti,Min_E,Max_E,
     &                       Gtinum,Gtistart,Gtistop,Uspix,Regionfile,
     &                       Exposure,Datamin,Datamax,Status)
c
c  Reads event list into image map
c
c  I  Lun        (c)  Logical unit of open event file
c  I  Type       (c)  Type of image
c  O  Map        (i)  Image map
c  O  Exmap      (r)  Exposure map
c  O  Work       (i)  Temporary integer map (for TIME and COLOR images)
c  O  Rmap       (r)  Temporary real map (for TIME and COLOR images)
c  I  Szx        (i)  Image size in X
c  I  Szy        (i)  Image size in Y
c  I  Zmx        (i)  Image zoom in X
c  I  Zmy        (i)  Image zoom in Y
c  I  Xi         (c)  Image X column
c  I  Yi         (c)  Image Y column
c  I  Zi         (c)  Z column (Values in Zcol pile onto pixels)
c  I  Ei         (c)  Energy column (e.g. PHA or PI)
c  I  Ti         (c)  Time column
c  I  Min_E      (i)  Minimum energy channel
c  I  Max_E      (i)  Maximum energy channel
c  I  Gtinum     (i)  Number of values in GTI arrays
c  I  Gtistart   (d)  GTI start times
c  I  Gtistop    (d)  GTI stop times
c  I  Uspix      (d)  User-entered center of image in pixel coords
c  I  Y_pix      (i)  User-entered y center of image in pixel coords
c  I  Regionfile (c)  User-entered region to filter events on
c  I  Exposure   (d)  Exposure time
c  O  Datamin    (d)  Minimum value in image
c  O  Datamax    (d)  Maximum value in image
c  O  Status     (i)  Error flag (0=OK)
c
--------------------------------------------------------
      subroutine rd_exohdr(Filename, Mapid, Szx, Szy, Lun, Rec1, Status)
      implicit none
c
c  Open an image file of type exosat with direct access
c  without knowing the record length in advance
c  Then, reads header and sets internal XIMAGE header
c  (From RDHEA routine)
c
c  I  Filename    (c) Name of exosat file
c  I  Mapid       (c) Map to set header 
c  O  Szx         (i) Size of image in x
c  O  Szy         (i) Size of image in y
c  O  Lun         (i) Logical unit of opened file
c  O  Rec1        (i) First record
c  O  Status      (i) Error flag  ( 0 = OK )
c
--------------------------------------------------------
      subroutine rd_exoimg(Lun, Rec1, Exp_map, Map, Exmap, I2map, 
     &                     Szx, Szy, Exposure, Status)
c
c  Reads an image from exosat file into integer map
c  (formerly RDIMA)
c
c  I  Lun      (i)  Logical unit of open exosat file
c  I  Rec1     (i)  First record
c  I  Exp_map  (l)  Whether to read into exposure map
c  O  Map      (i)  Image map
c  O  I2map   (i*2) Temprary buffer
c  O  Exmap    (r)  Exposure map
c  I  Szx      (i)  Size of maps in x
c  I  Szy      (i)  Size of maps in y
c  I  Exposure (d)  Exposure time in seconds
c  O  Status   (i)  Error flag (0 = OK)
c
--------------------------------------------------------
      subroutine rd_expkeys(Lun, Exposure, Dtcor, Ierr)
c
c Read exposure and deadtime correction keywords
c
c  I  Lun      (i)  Logical unit of open FITS file
c  O  Exposure (d) 
c  O  Dtcor    (d)  Deadtime correction
c  O  Ierr     (i)  Error flag  (0=OK)
c
--------------------------------------------------------
      subroutine rd_gti (lun, gtiext, gtinum, igtistart, igtistop, 
     &                   gtiuni, status)
c
c Reads and returns GTIs for open fits file
c
c  I  lun       (i)   Logical unit of open FITS file
c  I  gtiext    (i)   Extension number of GTI table
c  O  gtinum    (i)   Number of values into GTI arrays
c  O  igtistart (i)   Array pointer of start times for GTIs
c  O  igtistop  (i)   Array pointer of stop times for GTIs
c  O  gtiuni    (c)   Unit of times in GTI arrays
c  O  status    (i)   Error flag (0=OK)
c
--------------------------------------------------------
      subroutine rd_img_xim(Lun,Imgnum,Type,Map,Exmap,Rmap,Szx,Szy,
     &                      Zmx,Zmy,Usrebx,Usreby,Naxes,Crpix,Drpix,
     &                      Uspix,Exposure,Datamin,Datamax,Status)
c
c  Core image reader
c  
c  I  Lun      (i) Logical unit of open FITS file
c  I  Imgnum   (i) Image number
c  I  Type     (c) Type of image ('IMG' or 'EXP')
c  O  Map      (i) Image map
c  I  Szx      (i) Size in x direction (to be read)
c  I  Szy      (i) Size in y direction (to be read)
c  I  Zmx      (i) Zoom in x direction
c  I  Zmy      (i) Zoom in y direction
c  I  Usrebx   (i) User-entered rebin factor in x
c  I  Usreby   (i) User-entered rebin factor in y
c  I  Naxes    (i) Size of FITS image (in file)
c  I  Crpix    (d) Image center in image coordinates
c  I  Drpix    (d) Image center in detector coordinates
c  I  Uspix    (d) User-entered center in detector coordinates
c  I  Exposure (d) Exposure time
c I/O Datamin  (d) Minimum data value (filter)
c I/O Datamax  (d) Maximum data value (filter)
c  I  Status   (i) Error flag (0 = OK)
c
--------------------------------------------------------
      subroutine rd_imgsz(Lun, Imgnum, Naxes, Status)
c
c  Reads image size from FITS file
c
c  I  Lun    (i)  Logical unit of open image FITS file
c I/O Imgnum (i)  Image number
c  O  Naxes  (i)  Image dimensions
c I/O Status (i)  Error flag (0 = OK)
c
--------------------------------------------------------
      subroutine rd_objkey(Lun, Object, Ierr)
c
c  Read object keyword
c
c  I  Lun    (i)  Logical unit of open FITS file
c  O  Object (c)  Value of OBJECT keyword
c  O  Ierr   (i)  Error flag (0=OK)
c
--------------------------------------------------------
      subroutine rd_obskeys (Lun, Begobs, Endobs, Ierr)
c
c  Given a unit number for an open FITS file, reads and returns 
c  keyword information on observation date and time in integer arrays
c
c  I  Lun    (i)  Logical unit of open FITS file
c  O  Begobs (c)  Date/time for observartion begin
c  O  Endobs (c)  Date/time for observation end
c  O  Ierr   (i)  Error flag  (0=OK)
c
c  Begobs, Endobs format => yyyy-mm-ddThh:mm:ss.s
c
--------------------------------------------------------
      SUBROUTINE READ_IMAGE(P_map, P_exmap, P_rmap, Szx, Szy, Equinox, 
     &                      Imgcnt, Status)
c
c  Read image interface
c
c  O  P_map       (i)  Pointer to current map
c  O  P_exmap     (i)  Pointer to current exposure map
c  O  P_rmap      (i)  Pointer to real current map
c  O  Szx,Szy     (i)  Size of maps
c  I  Equinox     (i)  XIMAGE equinox
c  O  Imgcnt      (i)  Image counter
c  O  Status      (i)  Error flag (0 = OK) 
c
--------------------------------------------------------
      subroutine saoimage(map, exmap, rmap, szx, szy, status)
c
c  Write on disk the current image stored in map and display fits image  
c  with SAOimage
c
c  I map       (i)  image map 
c  I exmap     (r)  exposure map
c  I rmap      (r)  display map
c  I szx       (i)  size x 
c  I szy       (i)  size y 
c  I status    (i)  error flag (0 = OK)
c
--------------------------------------------------------
      subroutine sethdr(Mapid,Filename,Datamin,Datamax,Szx,Szy,
     &                  Zmx,Zmy,Ctype,Ddelt,Uspix,Usval,Roll,North,
     &                  Object,Min_E,Max_E,Telescop,Instrume,Filter,
     &                  Exposure,Dtcor,Begobs,Endobs,Equimg)
c
c  Set double, integer, and string headers
c
c  I  Mapid     (c)  Which header is to be set
c  I  Filename  (c)  Filename
c  I  Datamin   (d)  Minimum data value
c  I  Datamax   (d)  Maximum data value
c  I  Szx       (i)  Image size in X
c  I  Szy       (i)  Image size in Y
c  I  Zmx       (i)  Image zoom in X
c  I  Zmy       (i)  Image zoom in Y
c  I  Ctype     (c)  Coordinate system
c  I  Ddelt     (d)  Pixel size in detector coordinates
c  I  Uspix     (d)  Center of image in pixel coordinates (x,y)
c  I  Usval     (d)  Center of image in sky coordinates (ra,dec)
c  I  Roll      (d)  Roll angle (deg)
c  I  North     (d)  North angle (deg)
c  I  Object    (c)  Object name
c  I  Min_E     (i)  Minimum energy channel
c  I  Max_E     (i)  Maximum energy channel
c  I  Telescop  (i)  Telescope
c  I  Instrume  (i)  Instrument
c  I  Filter    (c)  Filter
c  I  Exposure  (d)  Exposure time (sec)
c  I  Dtcor     (d)  Dead time correction
c  I  Begobs    (c)  Date for observation begin (yyyy-mm-ddThh:mm:ss)
c  I  Endobs    (c)  Date for observation end   (yyyy-mm-ddThh:mm:ss)
c  I  Equimg    (i)  Image equinox
c
--------------------------------------------------------
      subroutine wr_asc( filename, template, mapid, mode, map, exmap,
     &                   rmap, szx, szy, sigdig, status)
c
c  Write integer map to ascii file
c
c  I  filename   (c) Filename for ascii file
c  I  template   (c) Header template file
c  I  mapid      (c) Header id
c  I  mode       (i) 1=map 2=exmap 3=rmap
c  I  map        (i) Image map
c  I  exmap      (r) Exposure map
c  I  rmap       (r) Display map
c  I  szx,szy    (i) Size of map
c  I  sigdig     (i) Number of significant digits
c  O  status     (i) Error flag
c
--------------------------------------------------------
      subroutine wr_aschdr (lun, mapid, template)
c
c  Writes contents of header to ASCII file based on template
c
c  I  lun       (i)  Logical unit of open ascii file
c  I  mapid     (c)  Which header to print
c  I  template  (c)  Template to base output on
c
--------------------------------------------------------
      subroutine wr_exo( filename, mapid, mode, map, exmap,
     &                   rmap, i2buf, szx, szy, status)
c
c  Writes header and image to file in exosat format
c
c  I  filename   (c)  Filename for ascii file
c  I  mapid      (c)  Header id
c  I  mode       (i)  1=map 2=exmap 3=rmap
c  I  map        (i)  Image map
c  I  exmap      (r)  Exposure map
c  I  rmap       (r)  Display map
c  I  i2buf     (i*2) Integer*2 buffer
c  I  szx,szy    (i)  Size of map
c  O  status     (i)  Error flag
c
--------------------------------------------------------
      subroutine wr_fithdr(lun, mapid, template)
c
c  Writes contents of header to FITS file based on template
c
c  I  lun       (i)  Logical unit of open ascii file
c  I  mapid     (c)  Which header to print
c  I  template  (c)  Template to base output on
c
--------------------------------------------------------
      subroutine wr_fits( filename, template, mapid, mode, map, exmap, 
     &                    rmap, szx, szy, status)
c
c  Write integer map to fits
c
c  I  filename   (c) Filename for fits file
c  I  template   (c) Header template file
c  I  mapid      (c) Header id
c  I  mode       (i) 1=map 2=exmap 3=rmap
c  I  map        (i) Image map
c  I  exmap      (r) Exposure map
c  I  rmap       (r) Display map
c  I  szx,szy    (i) Size of map
c  O  status     (i) Error flag
c
--------------------------------------------------------
      subroutine write_image( map, exmap, rmap, szx, szy, status)
c
c write an image in fits or ascii or exosat(i*2) format
c map            I   i        current map
c exmap          I   i        current exposure map
c rmap           I   i        real current map
c szx            I   i        map size x
c szy            I   i        map size y
c status         O   i        error return
c
--------------------------------------------------------
(From XRONOS)

      subroutine xrstrext(in_fil,fname,iext,ierr)
c STRip the EXTension number from the filename
c Two cases are searched: filename[ext#] and filename+ext#.
c The filename can contain a system-dependent path.
c I/O in_fil  (c)  input filename, with or without an extension substring,
c  O  fname   (c)  input filename, returned without an extension substring.
c  O  iext    (i)  extension number stripped off
c I/O ierr   (i)  error status
c
--------------------------------------------------------
