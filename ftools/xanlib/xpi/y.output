

Terminals which are not used:

   SPACE


State 9 contains 6 reduce/reduce conflicts.
State 15 contains 11 reduce/reduce conflicts.
State 26 contains 1 shift/reduce conflict.

Grammar
rule 1    lines ->		/* empty */
rule 2    lines -> lines line
rule 3    lines -> ENDOFFILE
rule 4    line -> eol
rule 5    line -> eol
rule 6    line -> comm eol
rule 7    line -> QUESTION eol
rule 8    line -> comm QUESTION eol
rule 9    line -> comm par eol
rule 10   line -> error
rule 11   eol -> NL
rule 12   eol -> SEMICOLON
rule 13   comm -> PARAM
rule 14   par -> parameter
rule 15   par -> parameter par
rule 16   parameter -> values
rule 17   parameter -> par1 EQUALS value
rule 18   parameter -> par1
rule 19   values -> value
rule 20   values -> value COMMA values
rule 21   value -> REAL
rule 22   value -> INTEGER
rule 23   value -> STRING
rule 24   value -> PARAM
rule 25   value -> IRANGE
rule 26   par1 -> PARAMON
rule 27   par1 -> SLASH PARAMON
rule 28   par1 -> PARAMOFF
rule 29   par1 -> SLASH PARAMOFF
rule 30   par1 -> PARAM
rule 31   par1 -> SLASH PARAM
rule 32   par1 -> COMMA PARAM

Terminals, with rules where they appear

$ (-1)
error (256) 10
REAL (258) 21
INTEGER (259) 22
STRING (260) 23
PARAM (261) 13 24 30 31 32
SLASH (262) 27 29 31
EQUALS (263) 17
COMMA (264) 20 32
SPACE (265)
ENDOFFILE (266) 3
SEMICOLON (267) 12
NL (268) 11
PARAMON (269) 26 27
PARAMOFF (270) 28 29
IRANGE (271) 25
QUESTION (272) 7 8

Nonterminals, with rules where they appear

lines (18)
    on left: 1 2 3, on right: 2
line (19)
    on left: 4 5 6 7 8 9 10, on right: 2
eol (20)
    on left: 11 12, on right: 4 5 6 7 8 9
comm (21)
    on left: 13, on right: 6 8 9
par (22)
    on left: 14 15, on right: 9 15
parameter (23)
    on left: 16 17 18, on right: 14 15
values (24)
    on left: 19 20, on right: 16 20
value (25)
    on left: 21 22 23 24 25, on right: 17 19 20
par1 (26)
    on left: 26 27 28 29 30 31 32, on right: 17 18


state 0

    ENDOFFILE	shift, and go to state 1

    $default	reduce using rule 1 (lines)

    lines	go to state 2



state 1

    lines  ->  ENDOFFILE .   (rule 3)

    $default	reduce using rule 3 (lines)



state 2

    lines  ->  lines . line   (rule 2)

    $   	go to state 40
    error	shift, and go to state 3
    PARAM	shift, and go to state 4
    SEMICOLON	shift, and go to state 5
    NL  	shift, and go to state 6
    QUESTION	shift, and go to state 7

    line	go to state 8
    eol 	go to state 9
    comm	go to state 10



state 3

    line  ->  error .   (rule 10)

    $default	reduce using rule 10 (line)



state 4

    comm  ->  PARAM .   (rule 13)

    $default	reduce using rule 13 (comm)



state 5

    eol  ->  SEMICOLON .   (rule 12)

    $default	reduce using rule 12 (eol)



state 6

    eol  ->  NL .   (rule 11)

    $default	reduce using rule 11 (eol)



state 7

    line  ->  QUESTION . eol   (rule 7)

    SEMICOLON	shift, and go to state 5
    NL  	shift, and go to state 6

    eol 	go to state 11



state 8

    lines  ->  lines line .   (rule 2)

    $default	reduce using rule 2 (lines)



state 9

    line  ->  eol .   (rule 4)
    line  ->  eol .   (rule 5)

    $   	reduce using rule 4 (line)
    $   	[reduce using rule 5 (line)]
    error	reduce using rule 4 (line)
    error	[reduce using rule 5 (line)]
    PARAM	reduce using rule 4 (line)
    PARAM	[reduce using rule 5 (line)]
    SEMICOLON	reduce using rule 4 (line)
    SEMICOLON	[reduce using rule 5 (line)]
    NL  	reduce using rule 4 (line)
    NL  	[reduce using rule 5 (line)]
    QUESTION	reduce using rule 4 (line)
    QUESTION	[reduce using rule 5 (line)]
    $default	reduce using rule 4 (line)



state 10

    line  ->  comm . eol   (rule 6)
    line  ->  comm . QUESTION eol   (rule 8)
    line  ->  comm . par eol   (rule 9)

    REAL	shift, and go to state 12
    INTEGER	shift, and go to state 13
    STRING	shift, and go to state 14
    PARAM	shift, and go to state 15
    SLASH	shift, and go to state 16
    COMMA	shift, and go to state 17
    SEMICOLON	shift, and go to state 5
    NL  	shift, and go to state 6
    PARAMON	shift, and go to state 18
    PARAMOFF	shift, and go to state 19
    IRANGE	shift, and go to state 20
    QUESTION	shift, and go to state 21

    eol 	go to state 22
    par 	go to state 23
    parameter	go to state 24
    values	go to state 25
    value	go to state 26
    par1	go to state 27



state 11

    line  ->  QUESTION eol .   (rule 7)

    $default	reduce using rule 7 (line)



state 12

    value  ->  REAL .   (rule 21)

    $default	reduce using rule 21 (value)



state 13

    value  ->  INTEGER .   (rule 22)

    $default	reduce using rule 22 (value)



state 14

    value  ->  STRING .   (rule 23)

    $default	reduce using rule 23 (value)



state 15

    value  ->  PARAM .   (rule 24)
    par1  ->  PARAM .   (rule 30)

    REAL	reduce using rule 24 (value)
    REAL	[reduce using rule 30 (par1)]
    INTEGER	reduce using rule 24 (value)
    INTEGER	[reduce using rule 30 (par1)]
    STRING	reduce using rule 24 (value)
    STRING	[reduce using rule 30 (par1)]
    PARAM	reduce using rule 24 (value)
    PARAM	[reduce using rule 30 (par1)]
    SLASH	reduce using rule 24 (value)
    SLASH	[reduce using rule 30 (par1)]
    EQUALS	reduce using rule 30 (par1)
    COMMA	reduce using rule 24 (value)
    COMMA	[reduce using rule 30 (par1)]
    SEMICOLON	reduce using rule 24 (value)
    SEMICOLON	[reduce using rule 30 (par1)]
    NL  	reduce using rule 24 (value)
    NL  	[reduce using rule 30 (par1)]
    PARAMON	reduce using rule 24 (value)
    PARAMON	[reduce using rule 30 (par1)]
    PARAMOFF	reduce using rule 24 (value)
    PARAMOFF	[reduce using rule 30 (par1)]
    IRANGE	reduce using rule 24 (value)
    IRANGE	[reduce using rule 30 (par1)]
    $default	reduce using rule 24 (value)



state 16

    par1  ->  SLASH . PARAMON   (rule 27)
    par1  ->  SLASH . PARAMOFF   (rule 29)
    par1  ->  SLASH . PARAM   (rule 31)

    PARAM	shift, and go to state 28
    PARAMON	shift, and go to state 29
    PARAMOFF	shift, and go to state 30



state 17

    par1  ->  COMMA . PARAM   (rule 32)

    PARAM	shift, and go to state 31



state 18

    par1  ->  PARAMON .   (rule 26)

    $default	reduce using rule 26 (par1)



state 19

    par1  ->  PARAMOFF .   (rule 28)

    $default	reduce using rule 28 (par1)



state 20

    value  ->  IRANGE .   (rule 25)

    $default	reduce using rule 25 (value)



state 21

    line  ->  comm QUESTION . eol   (rule 8)

    SEMICOLON	shift, and go to state 5
    NL  	shift, and go to state 6

    eol 	go to state 32



state 22

    line  ->  comm eol .   (rule 6)

    $default	reduce using rule 6 (line)



state 23

    line  ->  comm par . eol   (rule 9)

    SEMICOLON	shift, and go to state 5
    NL  	shift, and go to state 6

    eol 	go to state 33



state 24

    par  ->  parameter .   (rule 14)
    par  ->  parameter . par   (rule 15)

    REAL	shift, and go to state 12
    INTEGER	shift, and go to state 13
    STRING	shift, and go to state 14
    PARAM	shift, and go to state 15
    SLASH	shift, and go to state 16
    COMMA	shift, and go to state 17
    PARAMON	shift, and go to state 18
    PARAMOFF	shift, and go to state 19
    IRANGE	shift, and go to state 20

    $default	reduce using rule 14 (par)

    par 	go to state 34
    parameter	go to state 24
    values	go to state 25
    value	go to state 26
    par1	go to state 27



state 25

    parameter  ->  values .   (rule 16)

    $default	reduce using rule 16 (parameter)



state 26

    values  ->  value .   (rule 19)
    values  ->  value . COMMA values   (rule 20)

    COMMA	shift, and go to state 35

    COMMA	[reduce using rule 19 (values)]
    $default	reduce using rule 19 (values)



state 27

    parameter  ->  par1 . EQUALS value   (rule 17)
    parameter  ->  par1 .   (rule 18)

    EQUALS	shift, and go to state 36

    $default	reduce using rule 18 (parameter)



state 28

    par1  ->  SLASH PARAM .   (rule 31)

    $default	reduce using rule 31 (par1)



state 29

    par1  ->  SLASH PARAMON .   (rule 27)

    $default	reduce using rule 27 (par1)



state 30

    par1  ->  SLASH PARAMOFF .   (rule 29)

    $default	reduce using rule 29 (par1)



state 31

    par1  ->  COMMA PARAM .   (rule 32)

    $default	reduce using rule 32 (par1)



state 32

    line  ->  comm QUESTION eol .   (rule 8)

    $default	reduce using rule 8 (line)



state 33

    line  ->  comm par eol .   (rule 9)

    $default	reduce using rule 9 (line)



state 34

    par  ->  parameter par .   (rule 15)

    $default	reduce using rule 15 (par)



state 35

    values  ->  value COMMA . values   (rule 20)

    REAL	shift, and go to state 12
    INTEGER	shift, and go to state 13
    STRING	shift, and go to state 14
    PARAM	shift, and go to state 37
    IRANGE	shift, and go to state 20

    values	go to state 38
    value	go to state 26



state 36

    parameter  ->  par1 EQUALS . value   (rule 17)

    REAL	shift, and go to state 12
    INTEGER	shift, and go to state 13
    STRING	shift, and go to state 14
    PARAM	shift, and go to state 37
    IRANGE	shift, and go to state 20

    value	go to state 39



state 37

    value  ->  PARAM .   (rule 24)

    $default	reduce using rule 24 (value)



state 38

    values  ->  value COMMA values .   (rule 20)

    $default	reduce using rule 20 (values)



state 39

    parameter  ->  par1 EQUALS value .   (rule 17)

    $default	reduce using rule 17 (parameter)



state 40

    $   	go to state 41



state 41

    $default	accept
