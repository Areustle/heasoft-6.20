      SUBROUTINE TTINIT()
C---
C Open an IO channel to the terminal.  Reset the terminal characteristics
C to allow single character I/O.
C---
      INTEGER   ICON
C
      INTEGER   MCHBUF
      COMMON/SYSIO/ MCHBUF(3)
C
      ICON=0
      CALL COPEN(ICON)
      CALL CSTTY(MCHBUF)
C
      RETURN
      END
C*********
      SUBROUTINE TTRSET()
C---
C Close IO channel to terminal.  Restore terminal characteristics.
C---
C
      INTEGER   MCHBUF
      COMMON/SYSIO/ MCHBUF(3)
C---
      CALL CRTTY(MCHBUF)
      RETURN
      END
C*********
      SUBROUTINE RDCHR (CHR)
      CHARACTER CHR*1
C---
C Read a single character from the assigned channel.
C---
      CALL CGETC(CHR)
      RETURN
      END
C*********
      SUBROUTINE PUTSTR (CBUF, LBUF)
      CHARACTER CBUF*(*)
      INTEGER   LBUF
C---
C Write CBUF(:LBUF) characters to the terminal.  If LBUF=0 then
C CBUF(:LENAC(LBUF)) characters are written.  It is very important
C that no other characters such as CR, LF, etc. are written.
C---
      INTEGER   LENACT
C
      INTEGER   I, ITMP
C---
      ITMP=LBUF
      IF(ITMP.EQ.0) ITMP=LENACT(CBUF)
      DO 100 I=1,LBUF
         CALL CPUTC(CBUF(I:I))
100   CONTINUE
      RETURN
      END
C*********
      SUBROUTINE FORTYP(IFTYPE)
      INTEGER   IFTYPE
C---
C IFTYPE should return
C  0  if single character IO (RDCHR, PUTSTR) has NOT been implemented.
C -1  if Fortran I/O preceeds write statements with a CR//LF.
C +1  if CR//LF follow Fortran write operations.
C---
      IFTYPE=+1
      RETURN
      END
C*********
      SUBROUTINE FLUSH(LUN)
      INTEGER LUN
C---
C LUN should always refer to the terminal stream
C---

      CALL CFLUSH()
      RETURN
      END
C*********
      SUBROUTINE SYSTEM(CBUF)
      CHARACTER*(*) CBUF

      CALL CSYSTEM(CBUF)
      RETURN
      END

