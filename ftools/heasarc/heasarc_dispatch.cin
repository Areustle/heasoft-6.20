/* Dispatch routine for heasarc */

#include <stdio.h>

int MAIN_; /* work around SunOS 4.1.3 bug */

main (argc,argv)
int argc;
char **argv;
{

  char *start;
  char *tstr;

  /* find the last / character */

  start = argv[0];
  tstr = start;

  while (*tstr) {
    if (*tstr == '/') {
      start = tstr;
      start++;
    }
    tstr++;
  }

  OpenDefaultPF(argc, argv);

  if (!strcmp(start,"addspec")) {
    addspc_();
  } else if (!strcmp(start,"nh")) {
    nh_();
  } else if (!strcmp(start,"ascii2pha")) {
    asciia_();
  } else if (!strcmp(start,"bincurve")) {
    bincue_();
  } else if (!strcmp(start,"binspec")) {
    binspc_();
  } else if (!strcmp(start,"chkarf")) {
    chkarf();
  } else if (!strcmp(start,"chkpha")) {
    chkpha_();
  } else if (!strcmp(start,"chkrmf")) {
    chkrmf();
  } else if (!strcmp(start,"ecd2pha")) {
    ecd2pa_();
  } else if (!strcmp(start,"extrpsf")) {
    extrpf_();
  } else if (!strcmp(start,"fadmap")) {
    fadmap_();
  } else if (!strcmp(start,"fixregion")) {
    fixren_();
  } else if (!strcmp(start,"grppha")) {
    grppha_();
  } else if (!strcmp(start,"hkexpand")) {
    hkexpd_();
  } else if (!strcmp(start,"hkscale")) {
    hkscae_();
  } else if (!strcmp(start,"mathpha")) {
    mathpa_();
  } else if (!strcmp(start,"hkunexpand")) {
    hkuned_();
  } else if (!strcmp(start,"mekal")) {
    mekal_();
  } else if (!strcmp(start,"raysmith")) {
    raysmh_();
  } else if (!strcmp(start,"rbnpha")) {
    rbnpha_();
  } else if (!strcmp(start,"sf2pha")) {
    sf2pha_();
  } else if (!strcmp(start,"sky2xy")) {
    sky2xy_();
  } else if (!strcmp(start,"xy2sky")) {
    xy2sky_();
  } else {
    fprintf (stderr,"heasarc_dispatch can't run %s from %s\n",start,argv[0]);
    return 1;
  }
 
  CloseDefaultPF();
  return 0;
}
