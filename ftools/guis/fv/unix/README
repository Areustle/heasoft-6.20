Procedure for building the FV stand-alone binary (PC Linux, Solaris/SunOS,
and Mac/Darwin Universal Binary):

1) With CVSROOT=":pserver:<username>@daria:/headas", log in to the 
   cvs server and check out the "fv" module:

   cvs co fv

   Important:

   * Edit tcltk/tcl/library/init.tcl to remove the following
     from line 188: "-encoding utf-8"

2) Configure:

   cd headas/BUILD_DIR
   ./configure --enable-fv-standalone

3) Build the libraries:

   make

4) Build the fv executable source code (fvexec.c & fvexec.h):

   cd ../ftools/guis/fv/unix
   ../../../BUILD_DIR/hmake fvexec

   This populates ./tklib (needed to create the fv source code) and
   runs the mktclapp GUI.  In the start-up window of the mktclapp GUI
   (the "Settings" tab), press "build".  If it notifies you that
   fvexec.c and fvexec.h were built without errors, exit the GUI and
   continue to the next step.

   *** appinit.mta:

       If Tcl/Tk has been updated to a new version, the locations or
       version numbers of files may have changed and will need to be
       updated in appinit.mta.  Also, running xmktclapp will remove 2
       lines in the current appinit.mta, so after making the 'fvexec'
       target, you will need to manually (re-)insert the lines

          -strip-tcl "tklib/tcl8/8.4/http-2.7.12.tm"
          -strip-tcl "tklib/tcl8/8.5/msgcat-1.5.2.tm"

       into appinit.mta (you can see where the analogous lines have
       disappeared by doing a 'cvs diff appinit.mta'), or just do this:

          $ rm appinit.mta; cvs up appinit.mta
 
       Then run

          ../../../BUILD_DIR/hmake fvexec-remake

       to generate a new fvexec.c.  This will allow fv to find the
       http and msgcat modules.

5) Build the fv executable:

   ../../../BUILD_DIR/hmake

   *** Note that the executable (./fv) may not run properly here: it
       needs to be in its installed directory structure (step 6 below) in
       order for all of the necessary Tcl scripts to be correctly located.

   *** Note that if you ran an 'hmake clean' after this but aren't
       rebuilding fvexec.* (i.e. not making the 'fvexec' target),
       be sure to make the 'fv-tklib' target.

6) Package everything up into a tar file:

   ../../../BUILD_DIR/hmake fvpkg

   You should now have a zipped tar file "fvX.X_<OS-Name>.tar.gz".
