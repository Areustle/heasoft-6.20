# ---------------------------------------------------------------------------
ROOTNAME = xtcl
VERSION  = 1.0
PACKAGE  = $(ROOTNAME)-$(VERSION)

# ---------------------------------------------------------------------------
# Things you can change to personalize the Makefile for your own site.
# ---------------------------------------------------------------------------
# INSTALLATION DIRECTORIES
# ---------------------------------------------------------------------------

# Top-level directory in which to install architecture-specific files:
prefix = /data/osiris01/xtegof/local
exec_prefix = ${prefix}

# Directory in which to install the program xtcl_wish and xdf script:
BIN_DIR = $(exec_prefix)/bin

# Directory in which to install the xtcl widget classes:
WIDGET_DIR = $(exec_prefix)/lib/xtcl/widgets

# ---------------------------------------------------------------------------
# COMPILATION SOURCES/LIBRARIES
# ---------------------------------------------------------------------------

# Directory in which to find the required object libraries
LIB_DIR = $(exec_prefix)/lib

# Directory in which to find the required include files:
INCLUDE_DIR = $(exec_prefix)/include

# Tcl source directory (must contain tclInt.h)
TCL_INC =	-I../tcl7.4b2

# iTcl source directory
ITCL_INC =	-I../itcl-1.5/src

# Tk include directory
TK_INC =	-I../tk4.0b2

# X11 include directory
X11_INC =	-I/usr1/X11R5/include

# FITSIO include directory
FITSIO_INC =	-I/data/osiris01/xtegof/ftools/develop/include

# Tcl library
TCL_LIB =	-L../tcl7.4b2 -ltcl

# iTcl library
ITCL_LIB =	-L../itcl-1.5/src -litcl

# Tk library
TK_LIB =	-L../tk4.0 -ltk

# Linker switch(es) to use to link with the X11 library archive
X11_LIB =	-L/usr1/X11R5/lib -lX11

# Path to FITSIO libary archive and linker switch(es) to use to link with it
#		FITSIO_LIB =	-L<insert directory path to FITSIO library>
#				-lfitsio
FITSIO_LIB =	-L/data/osiris01/xtegof/ftools/develop/host -lfitsio

# Libraries to use when linking:  must include at least Tk, Tcl, iTcl, Xlib,
# Fortran, and the math library (in that order), plus any other required
# linker switches
# Examples: 
#	- for XTE/GOF SunOS environment, add:
#		-L/usr/lang/SC1.0 -lF77 -lm
# 	- for the XTE/GOF/PCA group's DEC Alpha environment, add:
#		-lUfor -lfor -lutil -lots -lm
# 	- for an HP-UX environment (courtesy of Tim Oosterbroek at the
#	  Astronomical Institute of the University of Amsterdam), add:
#		-L/opt/fortran/lib -lU77 -lcl -lisamstub /lib/libdld.1 -lm
#				
LIBS =	$(TK_LIB) $(ITCL_LIB) $(TCL_LIB) $(X11_LIB) $(FITSIO_LIB) \
-L$(LIB_DIR) -L/usr/lang/SC1.0 -lF77 -lm

# Composite list of include files
INCS =	-I$(SRC_DIR) $(TCL_INC) $(ITCL_INC) $(TK_INC) $(FITSIO_INC) \
-I$(INCLUDE_DIR) $(X11_INC)

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = -O

# Loader switches, for example to change from -static to -shared, change the
# following line:
LFLAGS = -static

# To turn off the security checks that disallow incoming sends when
# the X server appears to be insecure, reverse the comments on the
# following lines:
SECURITY_FLAGS =
#SECURITY_FLAGS = -DTK_NO_SECURITY

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# To enable memory debugging reverse the comment characters on the following
# lines.  Warning:  if you enable memory debugging, you must do it
# *everywhere*, including all the code that calls Tcl, and you must use
# ckalloc and ckfree everywhere instead of malloc and free.
MEM_DEBUG_FLAGS =
#MEM_DEBUG_FLAGS = -DTCL_MEM_DEBUG

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

# ---------------------------------------------------------------------------
# You shouldn't normally modify anything below this line.
# ---------------------------------------------------------------------------

INSTALL =		/bin/install -c
INSTALL_PROGRAM =	$(INSTALL)
INSTALL_DATA =		$(INSTALL) -m 644
RANLIB =		ranlib
SRC_DIR =		.
VPATH =			.

# ---------------------------------------------------------------------------
# The information below should be usable as is.
# ---------------------------------------------------------------------------

CC =		gcc
CC_SWITCHES =	$(CFLAGS) $(INCS) $(PROTO_FLAGS) $(SECURITY_FLAGS) \
		$(MEM_DEBUG_FLAGS)

SRCS =		SelectObs.c SelectAppIds.c SelectFiles.c

OBJS =		SelectObs.o SelectAppIds.o SelectFiles.o

all:		xtcl_wish

xtcl_wish:	tkAppInit.o $(OBJS)
		$(CC) tkAppInit.o $(OBJS) $(LIBS) $(LFLAGS) -o xtcl_wish

install:	xtcl_wish xdf .xdfrc \
			./widgets/ListBox.tcl \
			./widgets/SelectBox.tcl \
			./widgets/XdfBox.tcl \
			./widgets/tclIndex
		@for i in $(LIB_DIR) $(WIDGET_DIR) $(BIN_DIR); \
		do \
			if [ ! -d $$i ] ; then \
				echo "Making directory $$i"; \
				mkdir -p $$i; \
				chmod 755 $$i; \
			else true; \
			fi; \
		done;
		@echo "Installing xtcl_wish in $(BIN_DIR)"
		@$(INSTALL_PROGRAM) xtcl_wish $(BIN_DIR)
		@echo "Installing xdf in $(BIN_DIR)"
		@$(INSTALL_PROGRAM) xdf $(BIN_DIR)
		@echo "Installing .xdfrc in $(LIB_DIR)/xtcl"
		@$(INSTALL_PROGRAM) ./.xdfrc $(LIB_DIR)/xtcl
		@echo "Installing ListBox.tcl in $(WIDGET_DIR)"
		@$(INSTALL_PROGRAM) ./widgets/ListBox.tcl $(WIDGET_DIR)
		@echo "Installing SelectBox.tcl in $(WIDGET_DIR)"
		@$(INSTALL_PROGRAM) ./widgets/SelectBox.tcl $(WIDGET_DIR)
		@echo "Installing XdfBox.tcl in $(WIDGET_DIR)"
		@$(INSTALL_PROGRAM) ./widgets/XdfBox.tcl $(WIDGET_DIR)
		@echo "Installing tclIndex in $(WIDGET_DIR)"
		@$(INSTALL_PROGRAM) ./widgets/tclIndex $(WIDGET_DIR)

clean:
		rm -f *.o *.a core errs *~ \#* TAGS *.E a.out errors
		rm -f xtcl_wish

lint:
		$(LINT) $(INCS) $(SRCS)

.c.o:
		$(CC) -c $(CC_SWITCHES) $<

$(OBJS):	xdf.h fitsdefs.h
