#! /usr/bin/perl 
$version ="1.00";
$date  ="2006-11-13";
$author = "kaa";

# This script reprocesses the input Suzaku XIS event file. It currently runs
# xiscoord, xisputpixelquality, and xispi.

if(@ARGV < 1 || @ARGV > 4)
{
    print "\n usage : xsl_suzaku_xis_reproc filename attfile hkfile echo?\n";
    exit(0);
}

$filename = $ARGV[0];
$attfile = $ARGV[1];
$hkfile = $ARGV[2];
$echo = "no";
if ( @ARGV == 4 && $ARGV[3] eq "yes" ) { $echo = "yes"; }

# save a copy of the input file

$command = "cp $filename $filename-save";
if ( $echo eq "yes" ) { print $command,"\n"; }
system($command);

# get names of the calibration files required (though the tools should really
# do this internally) - we will need to know the instrument

$command = "fkeypar fitsfile=$filename\[EVENTS\] keyword=INSTRUME";
system($command);
($instrume = `pget fkeypar value`) =~ tr/\n//d;

($teldef  = `quzcif suzaku $instrume - - TELDEF      now now -`) =~ s/[0-9]\n//;
($badcol  = `quzcif suzaku $instrume - - BADPIX      now now -`) =~ s/[0-9]\n//;
($calmask = `quzcif suzaku $instrume - - CALMASK     now now -`) =~ s/[0-9]\n//;
($pha2pi  = `quzcif suzaku $instrume - - CHARGETRAIL now now -`) =~ s/[0-9]\n//;

# run xiscoord

$tmpfile = $filename . "-tmp";
$instrume =~ tr/[A-Z]/[a-z]/;

if ( $attfile eq "none" ) {
   $command = "cp $filename $tmpfile";
} else {
   $command = "xiscoord infile=$filename $instrume_teldef=$teldef attitude=$attfile pointing=KEY outfile=$tmpfile";
}
if ( $echo eq "yes" ) { print $command,"\n"; }
system($command);

# run xisputpixelquality

$tmp2file = $filename . "-tmp2";

$command = "xisputpixelquality infile=$tmpfile badcolumn_file=$badcol calmask_file=$calmask outfile=$tmp2file";
if ( $echo eq "yes" ) { print $command,"\n"; }
system($command);

# and run the xispi file

unlink $filename;

$command = "xispi infile=$tmp2file trcor_caldbfile=$pha2pi cticor_caldbfile=$pha2pi grade_caldbfile=$pha2pi pha2pi_caldbfile=$pha2pi pha2pi_hkfile=$hkfile outfile=$filename";
if ( $echo eq "yes" ) { print $command,"\n"; }
system($command);

# tidy up the temporary files

unlink $tmpfile;
unlink $tmp2file;






