#!/usr/bin/perl
#
#  ut_nuexpomap_fpma
#
#
#
# Changes:
#      0.1.0 : NS 25/01/2012 - First Release
#      0.1.1 - NS 04/12/2012 - Added 'skyx', 'skyy' and 'skysize' input parameters
#                            - Changed Dataset
#      0.1.2 - NS 10/07/2013 - Added new input parameters
#      0.1.3 - NS 10/03/2014 - Added new input parameters
#
#

use strict;
use ut_nustar;



# main
{
# Object Istances
    my $ut = ut_nustar->new(
			    name    => "nuexpomap",
			    utname  => "ut_nuexpomap_fpma",
			    version => "0.1.3",
			    );
    
# Set Parameter
    my $input = $ut->getParam("input_dir");
    my $output = $ut->getParam("output_dir") . "/" . $ut->getParam("utname");
    $ut->setParam("output_dir",$output);
    my $chat = $ut->getParam("chatter");
    my $clobber = $ut->getParam("clobber");
    
# I/O Directory Check
    $ut->checkIODirectory()
        if $ut->isValid;

# Environment check
    my @chk_env = ("LHEASOFT", "HEADAS", "CALDB");

    $ut->checkEnvironment(@chk_env)
        if $ut->isValid;
    
    my $ArchDir="ut_nuexpomap";  
    
# Input Files Check
    my @chk_inp = ("$input/$ArchDir/nu00015011001A01_cl.evt",
		   "$input/$ArchDir/nu00015011001_mast.fits",
		   "$input/$ArchDir/nu00015011001_att.fits",
		   "$input/$ArchDir/nu00015011001A_det1.fits",
		   );

    $ut->checkExist("Input", @chk_inp)
	if $ut->isValid;
    
# Prototype Check
   my @chk_proto = (
		    "$input/$ArchDir/ut_offset_fpma.fits",
		    "$input/$ArchDir/ut_histo_fpma.fits",
		    "$input/$ArchDir/ut_det1instr_fpma.fits",
		    "$input/$ArchDir/ut_det2instr_fpma.fits",
		    "$input/$ArchDir/ut_skyinstr_fpma.fits",
		    "$input/$ArchDir/ut_expomap_fpma.img",
		    );
    $ut->checkExist("Prototype", @chk_proto)
        if $ut->isValid;

# Executables Files Check
    my @chk_exe = ("nuexpomap","ftdiff","fverify", "pquery2");
    $ut->checkExecutable(@chk_exe)
        if $ut->isValid;

# Task Files Check
    my %par_task = (
		    infile         => "$input/$ArchDir/nu00015011001A01_cl.evt",
		    pixposfile     => "CALDB",
		    alignfile      => "CALDB",
		    mastaspectfile => "$input/$ArchDir/nu00015011001_mast.fits",
		    attfile        => "$input/$ArchDir/nu00015011001_att.fits",
		    teldef         => "CALDB",
		    instrprobmapfile => "CALDB",
		    vignfile       => "CALDB",
		    indet2instrfile=> "NONE",
		    aberration     => "no",
		    vignflag       => "no",
		    energy         =>  30,
		    det1reffile    => "$input/$ArchDir/nu00015011001A_det1.fits",
		    skyx           =>  500.5,
		    skyy           =>  500.5,
		    skysize        =>  1000,
		    pixbin         =>  100,
		    offsetfile     => "$output/out_offset_fpma.fits",
		    aspecthistofile=> "$output/out_histo_fpma.fits",    
		    det1instrfile  => "$output/out_det1instr_fpma.fits",
		    det2instrfile  => "$output/out_det2instr_fpma.fits",
		    skyinstrfile   => "$output/out_skyinstr_fpma.fits",
		    expomapfile    => "$output/out_expomap_fpma.img",
		    percent        => 0.02,
		    initseed       => "yes",
		    chatter        => $chat,
		    clobber        => "$clobber",
		    history        => "yes",
		    );

    $ut->runTask(%par_task)
	if $ut->isValid;
    if($ut->isValid)
    {
	
# fverify
	$ut->fverify("$output/out_offset_fpma.fits");
	$ut->fverify("$output/out_histo_fpma.fits");
	$ut->fverify("$output/out_det1instr_fpma.fits");
	$ut->fverify("$output/out_det2instr_fpma.fits");
	$ut->fverify("$output/out_skyinstr_fpma.fits");
	$ut->fverify("$output/out_expomap_fpma.img");
	
# ftdiff
	$ut->ftdiff("$output/out_offset_fpma.fits",
		    "$input/$ArchDir/ut_offset_fpma.fits");

	$ut->ftdiff("$output/out_histo_fpma.fits",
		    "$input/$ArchDir/ut_histo_fpma.fits");

	$ut->ftdiff("$output/out_det1instr_fpma.fits",
		    "$input/$ArchDir/ut_det1instr_fpma.fits");

	$ut->ftdiff("$output/out_det2instr_fpma.fits",
		    "$input/$ArchDir/ut_det2instr_fpma.fits");

	$ut->ftdiff("$output/out_skyinstr_fpma.fits",
		    "$input/$ArchDir/ut_skyinstr_fpma.fits");

	$ut->ftdiff("$output/out_expomap_fpma.img",
		    "$input/$ArchDir/ut_expomap_fpma.img");

    }
    
    $ut->delete();
}

