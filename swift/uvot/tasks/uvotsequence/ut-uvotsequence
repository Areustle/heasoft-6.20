#!/usr/bin/perl

use strict;

package Test::Sequence;
use base qw(Task::HEAdas);
use Task qw(:codes);

use FileHandle;

# main
{
  my $tool = Test::Sequence->new;

  $tool->unitTest;

  exit($tool->{code});
}

sub execute
{
  my ($self) = @_;

  $self->pilOptions(
    options => [
      qw(input=string chatter=int)
    ],
    get => 1,
  );

	$self->validate
		if $self->isValid;

	$self->runUvotsequence
		if $self->isValid;

}

sub validate
{

  my ($self) = @_;

# validate environment

  $self->validateEnvironment;

# validate input/output directories

  foreach my $key (qw(input)) {
    my $arg = $self->args->{$key};
    if (not -d $arg) {
      $self->fatal(BAD_INPUT,"invalid $key directory: $arg");
    }
  }
}

sub runUvotsequence
{

  my ($self) = @_;

  my $args = $self->args;

  my $input = $args->{input};

  my @args = (
    imglist   => "$input/img.lis",
    attfile   => "$input/sw00111529000sat.fits",
    trigtime  => "132853476.48",
    plotseq   => "no",
    chatter => 5,

  );

# validate required files

  my %args = @args;
  foreach my $key (qw(imglist attfile)) {
    if (not -f $args{$key}) {
      $self->fatal(BAD_INPUT, "invalid $key file: $args{$key}");
    }
  }

  {
    my $command = $self->buildCommand('uvotsequence', @args);
    $self->shell($command);
  }

}
