#! perl
# $Source: /headas/headas/swift/uvot/tasks/uvotgraspcorr/ut-uvotgraspcorr,v $
# $Revision: 1.1 $
# $Date: 2008/04/17 21:27:20 $
#
# $Log: ut-uvotgraspcorr,v $
# Revision 1.1  2008/04/17 21:27:20  rwiegand
# Added unit test.
#

use strict;

package Test::GrismAspcorr;
use base qw(Task::HEAdas);
use Task qw(:codes);

use FileHandle;


# main
{
	my $tool = __PACKAGE__->new;

	$tool->unitTest;

	exit($tool->{code});
}


sub execute
{
	my ($self) = @_;

	$self->pilOptions(
			options => [
				qw(input=string output=string chatter=int)
			],
			get => 1,
			);

	$self->validate
		if $self->isValid;

	$self->runUvotgraspcorr
		if $self->isValid;
}


sub validate
{
	my ($self) = @_;

	# validate environment
	$self->validateEnvironment;

	# validate input/output directories
	foreach my $key (qw(input output)) {
		my $arg = $self->args->{$key};
		if (not -d $arg) {
			$self->fatal(BAD_INPUT,
				"invalid $key directory: $arg");
		}
	}
}


sub runUvotgraspcorr
{
	my ($self) = @_;

	my $args = $self->args;

	my $input = $args->{input};
	my $output = $args->{output};

	# note: make a working copy of the observation image
	# since it will be modified
	$self->shell("cp -f $input/ugu_dt.img $output/det.img");
	$self->shell("chmod +w $output/det.img");
	return if not $self->isValid;

	my @args = (
		infile    => "$output/det.img",
		catspec   => "$input/catspec.gsc",

		starid    => 'NONE',
		distfile  => 'DEFAULT',

		# cleanup   => 'no',
		chatter	  => 5,
	);

	# validate required files
	my %args = @args;
	$args{template} = "$input/template.fits";
	foreach my $key (qw(infile catspec template)) {
		if (not -f $args{$key}) {
			$self->fatal(BAD_INPUT,
				"invalid $key file: $args{$key}");
		}
	}

	{
		my $command = $self->buildCommand('uvotgraspcorr', @args);
		$self->shell($command);
	}

	if ($self->isValid) {
		my $command = $self->buildCommand('ftverify',
			infile => $args{infile},
			outfile => 'STDOUT',
			);
		$self->shell($command);
	}

	if ($self->isValid) {
		my $command = $self->buildCommand('ftdiff',
			infile1 => $args{template},
			infile2 => $args{infile},
			reltol => 1e-6,
			exclude => 'CREATOR,DATE,DATASUM',
			);
		$self->shell($command);
	}
}

