#! /usr/bin/perl
# Script: ape_test_pfile_writer
# Author: James Peachey
# Purpose: Write a test file which has no newline at EOF.

# Confirm command line.
$#ARGV == 1 or die "Usage: ape_test_pfile_writer infile outfile.\n";
my $in_file = $ARGV[0];
my $out_file = $ARGV[1];

# Start by ingesting the known canonical test par file.
open IN_FILE, $in_file or die "Unable to open file $in_file.\n";
my @content = <IN_FILE>;
close IN_FILE;

# my $first_blank = 1;
# foreach my $line (@content) {
#   if ($first_blank) {
#     # In the first totally blank line, replace newline with linefeed.
#     if ($line == "\n") { $line = ord(10); $first_blank = 0; }
#   } else {
#     # In the second totally blank line, replace newline with carriage return.
#     if ($line == "\n") { $line = ord(13); break; }
#   }
# }

# Regular expression for finding anything resembling newline.
$expression = "[";
$expression .= pack "cc", 10, 13;
$expression .= "\n";
$expression .= ']*$';

# Pop the last line off the file.
my $last_line = pop @content;

# Chop off anything resembling a newline on the last line.
grep s/$expression//, $last_line;

# Push the last line back onto the file.
push @content, $last_line;

# Finally write the output.
open OUT_FILE, ">$out_file" or die "Unable to open file $out_file.\n";
print OUT_FILE @content;
close OUT_FILE;
