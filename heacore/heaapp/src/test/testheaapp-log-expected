testheaapp: heaapp_test_log_par: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: heaapp_test_log_par: about to run test case for log, then par initializations.
testheaapp: heaapp_test_log_par: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: fake_out: heaapp_test_log_par: Before heaapp_initialize, printed this with appdata.printout
testheaapp: fake_out: fakelog_heaapp_initialize: logfile name is not set; not even pretending to open logfile.
testheaapp: fake_out: fakelog_heaapp_initialize: about to connect "fake" functions for logging.
testheaapp: fake_out: fakelog_heaapp_initialize: connected "fake" functions for logging.
testheaapp: fake_out: fakepar_heaapp_initialize: simulating getting logfile name from user.
testheaapp: fake_out: heaapp_test_log_par: After heaapp_initialize, printed this with appdata.printout.
testheaapp: fake_err: heaapp_test_log_par: After heaapp_initialize, printed this with appdata.printerr.
testheaapp: fake_info: chatter 3: heaapp_test_log_par: After heaapp_initialize, printed this with appdata.printinfo.
testheaapp: fake_warn: chatter 3: heaapp_test_log_par: After heaapp_initialize, printed this with appdata.printwarn.
testheaapp: fake_out: fakepar_heaapp_finalize: resetting logfile name to blank.
testheaapp: fake_out: fakelog_heaapp_finalize: resetting logging functions to the default.
testheaapp: fakelog_heaapp_finalize: reset logging functions to the default.
testheaapp: heaapp_test_log_par: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: heaapp_test_log_par: done with test case for log, then par initializations.
testheaapp: heaapp_test_log_par: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: 
testheaapp: heaapp_test_par_log: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: heaapp_test_par_log: about to run test case for par, then log initializations.
testheaapp: heaapp_test_par_log: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: fake_out: heaapp_test_par_log: Before heaapp_initialize, printed this with appdata.printout
testheaapp: fake_out: fakepar_heaapp_initialize: simulating getting logfile name from user.
testheaapp: fake_out: fakelog_heaapp_initialize: logfile name is set; pretending to open file testheaapp.log.
testheaapp: fake_out: fakelog_heaapp_initialize: about to connect "fake" functions for logging.
testheaapp: fake_out: fakelog_heaapp_initialize: connected "fake" functions for logging.
testheaapp: fake_out: heaapp_test_par_log: After heaapp_initialize, printed this with appdata.printout.
testheaapp: fake_err: heaapp_test_par_log: After heaapp_initialize, printed this with appdata.printerr.
testheaapp: fake_info: chatter 3: heaapp_test_par_log: After heaapp_initialize, printed this with appdata.printinfo.
testheaapp: fake_warn: chatter 3: heaapp_test_par_log: After heaapp_initialize, printed this with appdata.printwarn.
testheaapp: fake_out: fakelog_heaapp_finalize: resetting logging functions to the default.
testheaapp: fakelog_heaapp_finalize: reset logging functions to the default.
testheaapp: fakepar_heaapp_finalize: resetting logfile name to blank.
testheaapp: heaapp_test_par_log: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: heaapp_test_par_log: done with test case for par, then log initializations.
testheaapp: heaapp_test_par_log: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: 
testheaapp: Resetting PFILES to . to find heaapp_ape.par.
testheaapp: ERROR: heaapp_ahlog_test: this was written with printerr.
testheaapp: WARNING: heaapp_ahlog_test: (HIGH) this was written with printwarn.
testheaapp: this was written with printout.
testheaapp: INFO: heaapp_ahlog_test: this was written with printinfo.
testheaapp: heaapp_ape_test: warning: ape found no clobber parameter.
testheaapp: heaapp_ape_test: warning: ape found no chatter parameter.
testheaapp: heaapp_ape_test: warning: ape found no logfile parameter.
testheaapp: heaapp_ape_test: warning: ape found no debug parameter.
testheaapp: heaapp_ape_test: warning: ape found no history parameter.
testheaapp: INFO: heaapp_test_ape_ahlog_heautils: this message should appear both on screen and in the log file for testheaapp.
testheaapp: 
testheaapp: heaapp_test_msg: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: heaapp_test_msg: about to run test case for message caching and flushing.
testheaapp: heaapp_test_msg: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: heaapp_test_msg: printinfo message 0.
testheaapp: heaapp_test_msg: printwarn message 1.
testheaapp: heaapp_test_msg: printerr message 2.
testheaapp: heaapp_test_msg: printout message 3.
testheaapp: heaapp_test_msg: printout message 4.
testheaapp: heaapp_test_msg: printerr message 5.
testheaapp: heaapp_test_msg: printwarn message 6.
testheaapp: heaapp_test_msg: printinfo message 7.
testheaapp: heaapp_test_msg: printout message 8.
testheaapp: heaapp_test_msg: printwarn message 9.
testheaapp: heaapp_test_msg: printerr message 10.
testheaapp: heaapp_test_msg: printinfo message 11.
testheaapp: heaapp_test_msg: printinfo multi-line message 12. This message is so long
testheaapp: heaapp_test_msg: it is continued on the next line. Each line should be properly formatted
testheaapp: heaapp_test_msg: with the prefix (function name) repeated at the beginning of each line.
testheaapp: heaapp_test_msg: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: heaapp_test_msg: done with test case for message caching and flushing.
testheaapp: heaapp_test_msg: ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
testheaapp: Unit test PASSED.
